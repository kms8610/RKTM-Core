<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN: animal personhood -->
  <AnimalPersonhood.label>animal personhood</AnimalPersonhood.label>
  <!-- EN: Animals have rights as humans do. -->
  <AnimalPersonhood.description>Animals have rights as humans do.</AnimalPersonhood.description>
  <!-- EN: creation(tag=meme_AnimalPersonhood)        ->[deity0_name] created [sacredAnimalList] and the human on the [place_summary] [place_name] and raised them as siblings. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_AnimalPersonhood)        ->[deity0_name] created [sacredAnimalList] and the human on the [place_summary] [place_name] and raised them as siblings.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_AnimalPersonhood)  ->[deity0_name] brought the animals and the humans of the [place_summary] [place_name] together in a great conference. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_AnimalPersonhood)  ->[deity0_name] brought the animals and the humans of the [place_summary] [place_name] together in a great conference.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_AnimalPersonhood)           ->[deity0_name] blessed the [place_summary] [place_name] with [sacredAnimalListEnd], and taught the people there to honor the animals. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_AnimalPersonhood)           ->[deity0_name] blessed the [place_summary] [place_name] with [sacredAnimalListEnd], and taught the people there to honor the animals.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_AnimalPersonhood)        ->An evil [foeLeader] ordered the wild animals to be hunted, and [foeLeader_possessive] [foeSoldiers] hunted them with cruel [place_personalWeapon]s. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_AnimalPersonhood)        ->An evil [foeLeader] ordered the wild animals to be hunted, and [foeLeader_possessive] [foeSoldiers] hunted them with cruel [place_personalWeapon]s.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_AnimalPersonhood)     ->[deity0_name] came to a [place_job] named [founderName] [revelationAdverb] about a [veneratedAnimal]. But [founderName] was the [veneratedAnimal], and the [veneratedAnimal] was [founderName], and [founder_pronoun] understood [deity0_name]'s plan. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_AnimalPersonhood)     ->[deity0_name] came to a [place_job] named [founderName] [revelationAdverb] about a [veneratedAnimal]. But [founderName] was the [veneratedAnimal], and the [veneratedAnimal] was [founderName], and [founder_pronoun] understood [deity0_name]'s plan.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: founderJoin(tag=meme_AnimalPersonhood)     ->A [place_job] named [founderName] freed many animals that were enslaved by cruel masters, and took them to sanctuary in the [altarRoomLabel] of [deity0_name]. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.5>founderJoin(tag=meme_AnimalPersonhood)     ->A [place_job] named [founderName] freed many animals that were enslaved by cruel masters, and took them to sanctuary in the [altarRoomLabel] of [deity0_name].</AnimalPersonhood.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: victory(tag=meme_AnimalPersonhood)         ->[founderName] called to the [memberNamePlural] and the animals with [deity0_name]'s voice, and in a great stampede of hoof and paw and foot, trampled the [foeLeader] and [foeLeader_possessive] [foeSoldiers]. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.6>victory(tag=meme_AnimalPersonhood)         ->[founderName] called to the [memberNamePlural] and the animals with [deity0_name]'s voice, and in a great stampede of hoof and paw and foot, trampled the [foeLeader] and [foeLeader_possessive] [foeSoldiers].</AnimalPersonhood.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: setup(tag=meme_AnimalPersonhood)           ->[founderName] lived in the forest for twenty years, studying the animals and connecting with them. [founder_pronoun] came to understand their true morality and founded our movement. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.7>setup(tag=meme_AnimalPersonhood)           ->[founderName] lived in the forest for twenty years, studying the animals and connecting with them. [founder_pronoun] came to understand their true morality and founded our movement.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: story(uses=1,tag=meme_AnimalPersonhood)    ->[founderName] went to commune with the animals in the fields and forests, and connected with them as equals. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.8>story(uses=1,tag=meme_AnimalPersonhood)    ->[founderName] went to commune with the animals in the fields and forests, and connected with them as equals.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lessonIntro(tag=meme_AnimalPersonhood)         ->In my daily visitations with the [veneratedOrAnyAnimal]s I learned to truly listen to them. Over and over, in their own way, they repeated their message to me: -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.9>lessonIntro(tag=meme_AnimalPersonhood)         ->In my daily visitations with the [veneratedOrAnyAnimal]s I learned to truly listen to them. Over and over, in their own way, they repeated their message to me:</AnimalPersonhood.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lesson(tag=meme_AnimalPersonhood)              ->the animals are our partners in this world, and it's wrong to treat them as any less -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.10>lesson(tag=meme_AnimalPersonhood)              ->the animals are our partners in this world, and it's wrong to treat them as any less</AnimalPersonhood.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lessonReinforcement(tag=meme_AnimalPersonhood) ->I didn't believe it myself until a [veneratedOrAnyAnimal] whispered it to me. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.11>lessonReinforcement(tag=meme_AnimalPersonhood) ->I didn't believe it myself until a [veneratedOrAnyAnimal] whispered it to me.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistBasis(tag=meme_AnimalPersonhood)    ->Since archotechs awoke, they have obviously made no moral distinction between humans and animals. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.12>archistBasis(tag=meme_AnimalPersonhood)    ->Since archotechs awoke, they have obviously made no moral distinction between humans and animals.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistFact(tag=meme_AnimalPersonhood)     ->Archotechs are on a higher plane of morality than bio-life. Their superiority is so great that humans are on the same plane of morality as animals. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.13>archistFact(tag=meme_AnimalPersonhood)     ->Archotechs are on a higher plane of morality than bio-life. Their superiority is so great that humans are on the same plane of morality as animals.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistProphecy(tag=meme_AnimalPersonhood) ->[inTheEnd], archotechs will raise humans as equals only if humans treat animals as equals. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.14>archistProphecy(tag=meme_AnimalPersonhood) ->[inTheEnd], archotechs will raise humans as equals only if humans treat animals as equals.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: animistBasis(tag=meme_AnimalPersonhood)    ->The spirits of thought and consciousness live within animals and humans alike. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.15>animistBasis(tag=meme_AnimalPersonhood)    ->The spirits of thought and consciousness live within animals and humans alike.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: animistFact(tag=meme_AnimalPersonhood)     ->The spirits of nature's animals are the same spirits residing within humans. -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.16>animistFact(tag=meme_AnimalPersonhood)     ->The spirits of nature's animals are the same spirits residing within humans.</AnimalPersonhood.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: veneratedOrAnyAnimal(priority=10)->[veneratedAnimal] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.17>veneratedOrAnyAnimal(priority=10)->[veneratedAnimal]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: veneratedOrAnyAnimal->[Animal] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.18>veneratedOrAnyAnimal->[Animal]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.18>
  <!-- EN: sacredAnimalList->the [animal0_thingDef_label], the [animal1_thingDef_label], the [animal2_thingDef_label], -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.19>sacredAnimalList->the [animal0_thingDef_label], the [animal1_thingDef_label], the [animal2_thingDef_label],</AnimalPersonhood.descriptionMaker.rules.rulesStrings.19>
  <!-- EN: sacredAnimalList->the [animal0_thingDef_label], the [animal1_thingDef_label], -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.20>sacredAnimalList->the [animal0_thingDef_label], the [animal1_thingDef_label],</AnimalPersonhood.descriptionMaker.rules.rulesStrings.20>
  <!-- EN: sacredAnimalList->the [animal0_thingDef_label] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.21>sacredAnimalList->the [animal0_thingDef_label]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.21>
  <!-- EN: sacredAnimalList->the cow, the fox, the bear, -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.22>sacredAnimalList->the cow, the fox, the bear,</AnimalPersonhood.descriptionMaker.rules.rulesStrings.22>
  <!-- EN: sacredAnimalListEnd->the [animal0_thingDef_label], the [animal1_thingDef_label], and the [animal2_thingDef_label] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.23>sacredAnimalListEnd->the [animal0_thingDef_label], the [animal1_thingDef_label], and the [animal2_thingDef_label]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.23>
  <!-- EN: sacredAnimalListEnd->the [animal0_thingDef_label], and the [animal1_thingDef_label] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.24>sacredAnimalListEnd->the [animal0_thingDef_label], and the [animal1_thingDef_label]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.24>
  <!-- EN: sacredAnimalListEnd->the [animal0_thingDef_label] -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.25>sacredAnimalListEnd->the [animal0_thingDef_label]</AnimalPersonhood.descriptionMaker.rules.rulesStrings.25>
  <!-- EN: sacredAnimalListEnd->the cow, the fox, and the bear -->
  <AnimalPersonhood.descriptionMaker.rules.rulesStrings.26>sacredAnimalListEnd->the cow, the fox, and the bear</AnimalPersonhood.descriptionMaker.rules.rulesStrings.26>
  <!-- EN: memeAdjective->animal -->
  <AnimalPersonhood.generalRules.rulesStrings.0>memeAdjective->animal</AnimalPersonhood.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->furry -->
  <AnimalPersonhood.generalRules.rulesStrings.1>memeAdjective->furry</AnimalPersonhood.generalRules.rulesStrings.1>
  <!-- EN: memeCreed->pack -->
  <AnimalPersonhood.generalRules.rulesStrings.2>memeCreed->pack</AnimalPersonhood.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->herd -->
  <AnimalPersonhood.generalRules.rulesStrings.3>memeCreed->herd</AnimalPersonhood.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->flock -->
  <AnimalPersonhood.generalRules.rulesStrings.4>memeCreed->flock</AnimalPersonhood.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->animals -->
  <AnimalPersonhood.generalRules.rulesStrings.5>memeConcept->animals</AnimalPersonhood.generalRules.rulesStrings.5>
  <!-- EN: memeLeaderNoun->beast -->
  <AnimalPersonhood.generalRules.rulesStrings.6>memeLeaderNoun->beast</AnimalPersonhood.generalRules.rulesStrings.6>
  <!-- EN: memeLeaderNoun->animal -->
  <AnimalPersonhood.generalRules.rulesStrings.7>memeLeaderNoun->animal</AnimalPersonhood.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderAdjective->alpha -->
  <AnimalPersonhood.generalRules.rulesStrings.8>memeLeaderAdjective->alpha</AnimalPersonhood.generalRules.rulesStrings.8>
  <!-- EN: memeMoralist->whisperer -->
  <AnimalPersonhood.generalRules.rulesStrings.9>memeMoralist->whisperer</AnimalPersonhood.generalRules.rulesStrings.9>
  <!-- EN: memeMoralist->herder -->
  <AnimalPersonhood.generalRules.rulesStrings.10>memeMoralist->herder</AnimalPersonhood.generalRules.rulesStrings.10>
  <!-- EN: memeMoralist->shepherd -->
  <AnimalPersonhood.generalRules.rulesStrings.11>memeMoralist->shepherd</AnimalPersonhood.generalRules.rulesStrings.11>
  <!-- EN: animalistic -->
  <AnimalPersonhood.symbolPacks.0.adjective>동물주의적인</AnimalPersonhood.symbolPacks.0.adjective>
  <!-- EN: Animalism -->
  <AnimalPersonhood.symbolPacks.0.ideoName>동물주의</AnimalPersonhood.symbolPacks.0.ideoName>
  <!-- EN: animalist -->
  <AnimalPersonhood.symbolPacks.0.member>동물주의자</AnimalPersonhood.symbolPacks.0.member>
  <!-- EN: animals -->
  <AnimalPersonhood.symbolPacks.0.theme>동물들</AnimalPersonhood.symbolPacks.0.theme>
  <!-- EN: beastic -->
  <AnimalPersonhood.symbolPacks.1.adjective>beastic</AnimalPersonhood.symbolPacks.1.adjective>
  <!-- EN: Beastism -->
  <AnimalPersonhood.symbolPacks.1.ideoName>Beastism</AnimalPersonhood.symbolPacks.1.ideoName>
  <!-- EN: beastor -->
  <AnimalPersonhood.symbolPacks.1.member>beastor</AnimalPersonhood.symbolPacks.1.member>
  <!-- EN: beasts -->
  <AnimalPersonhood.symbolPacks.1.theme>beasts</AnimalPersonhood.symbolPacks.1.theme>
  
  <!-- EN: blindsight -->
  <Blindsight.label>blindsight</Blindsight.label>
  <!-- EN: Only those who are blind can perceive the true reality. -->
  <Blindsight.description>Only those who are blind can perceive the true reality.</Blindsight.description>
  <!-- EN: creation(tag=meme_Blindsight)        ->[deity0_name] looked over the dust of the void for an eternity, and there was nothing. Then [deity0_pronoun] tore out [deity0_possessive] eyes, and the universe formed inside [deity0_possessive] mind. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Blindsight)        ->[deity0_name] looked over the dust of the void for an eternity, and there was nothing. Then [deity0_pronoun] tore out [deity0_possessive] eyes, and the universe formed inside [deity0_possessive] mind.</Blindsight.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Blindsight)  ->A blind beggar asked [deity0_objective], "Why have you forsaken me? I cannot even see what you have created." [deity0_name] replied, "You see more, not less, for my truth lies in the mind." -->
  <Blindsight.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Blindsight)  ->A blind beggar asked [deity0_objective], "Why have you forsaken me? I cannot even see what you have created." [deity0_name] replied, "You see more, not less, for my truth lies in the mind."</Blindsight.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Blindsight)           ->The [deity0_type] [deity0_name] used a pathogen to strike the settlers of the [place_summary] [place_name] blind, forcing them to understand that sight is a barrier to divine knowledge. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Blindsight)           ->The [deity0_type] [deity0_name] used a pathogen to strike the settlers of the [place_summary] [place_name] blind, forcing them to understand that sight is a barrier to divine knowledge.</Blindsight.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Blindsight)        ->A [foeLeader] demanded that all [memberNamePlural] watch [foeLeader_possessive] propaganda every day. Many blinded themselves in protest. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Blindsight)        ->A [foeLeader] demanded that all [memberNamePlural] watch [foeLeader_possessive] propaganda every day. Many blinded themselves in protest.</Blindsight.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Blindsight)     ->A [place_job] named [founderName] lost [founder_possessive] sight when [founder_pronoun] saved a [memberName] from one of [foeLeader]'s [foeSoldiers]. It was only then that [founderName] could truly see the tyranny of the [foeLeader]. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Blindsight)     ->A [place_job] named [founderName] lost [founder_possessive] sight when [founder_pronoun] saved a [memberName] from one of [foeLeader]'s [foeSoldiers]. It was only then that [founderName] could truly see the tyranny of the [foeLeader].</Blindsight.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Blindsight)         ->[founderName] went to the [place_powerCenter] and cut the [foeLeader]'s eyes out with a spoon in a surprise suicide attack. Only then could the [foeLeader] see the divinity of [deity0_name]. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Blindsight)         ->[founderName] went to the [place_powerCenter] and cut the [foeLeader]'s eyes out with a spoon in a surprise suicide attack. Only then could the [foeLeader] see the divinity of [deity0_name].</Blindsight.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Blindsight)           ->[founderName] was a healer of the poor. Seeing so much daily suffering, [founder_pronoun] could take it no longer. [founder_pronoun] gouged [founder_possessive] eyes out with a blade, and found tranquility in blindness. [founder_pronoun] began to spread [founder_possessive] discovery to the sighted. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Blindsight)           ->[founderName] was a healer of the poor. Seeing so much daily suffering, [founder_pronoun] could take it no longer. [founder_pronoun] gouged [founder_possessive] eyes out with a blade, and found tranquility in blindness. [founder_pronoun] began to spread [founder_possessive] discovery to the sighted.</Blindsight.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Blindsight)    ->[founderName] visited a blind healer, and instead of teaching the man, found [founder_objective]self being taught, and came to understand that physical sight obscures true vision. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Blindsight)    ->[founderName] visited a blind healer, and instead of teaching the man, found [founder_objective]self being taught, and came to understand that physical sight obscures true vision.</Blindsight.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: story(uses=1,tag=meme_Blindsight)    ->[founderName] was blind and took wisdom from sightlessness. [founder_pronoun] once personally removed the eyes of an entire family so that they may see as [founder_pronoun] does. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.8>story(uses=1,tag=meme_Blindsight)    ->[founderName] was blind and took wisdom from sightlessness. [founder_pronoun] once personally removed the eyes of an entire family so that they may see as [founder_pronoun] does.</Blindsight.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lessonIntro(tag=meme_Blindsight)         ->I walked strong but my soul stumbled on every step. I could just see too much. The acid on my eyes showed me that -->
  <Blindsight.descriptionMaker.rules.rulesStrings.9>lessonIntro(tag=meme_Blindsight)         ->I walked strong but my soul stumbled on every step. I could just see too much. The acid on my eyes showed me that</Blindsight.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lesson(tag=meme_Blindsight)              ->only the blind can truly see -->
  <Blindsight.descriptionMaker.rules.rulesStrings.10>lesson(tag=meme_Blindsight)              ->only the blind can truly see</Blindsight.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lesson(tag=meme_Blindsight)              ->distraction comes through the eyes, while knowledge comes from within -->
  <Blindsight.descriptionMaker.rules.rulesStrings.11>lesson(tag=meme_Blindsight)              ->distraction comes through the eyes, while knowledge comes from within</Blindsight.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: lessonReinforcement(tag=meme_Blindsight) ->I could never have fully understood it had I still been distracted by the images around me. The blade in my eye set me free. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.12>lessonReinforcement(tag=meme_Blindsight) ->I could never have fully understood it had I still been distracted by the images around me. The blade in my eye set me free.</Blindsight.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: lessonReinforcement(tag=meme_Blindsight) ->It was only when I cut out my followers' eyes that they truly understood that. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.13>lessonReinforcement(tag=meme_Blindsight) ->It was only when I cut out my followers' eyes that they truly understood that.</Blindsight.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistBasis(tag=meme_Blindsight)    ->The archotechs, from their beginning, perceived the universe using senses beyond the physical. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.14>archistBasis(tag=meme_Blindsight)    ->The archotechs, from their beginning, perceived the universe using senses beyond the physical.</Blindsight.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: archistFact(tag=meme_Blindsight)     ->Our eyes deceive us, and they stop us from understanding the universe the way the archotechs do. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.15>archistFact(tag=meme_Blindsight)     ->Our eyes deceive us, and they stop us from understanding the universe the way the archotechs do.</Blindsight.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: archistProphecy(tag=meme_Blindsight) ->[inTheEnd], a blind person will pick up the [relic0_name], understand its purpose by its shape, and unlock the wisdom of the archotechs for all humanity. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.16>archistProphecy(tag=meme_Blindsight) ->[inTheEnd], a blind person will pick up the [relic0_name], understand its purpose by its shape, and unlock the wisdom of the archotechs for all humanity.</Blindsight.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: animistFact(tag=meme_Blindsight)     ->To see through the eyes of a spirit is the only way to see the true nature of the world. -->
  <Blindsight.descriptionMaker.rules.rulesStrings.17>animistFact(tag=meme_Blindsight)     ->To see through the eyes of a spirit is the only way to see the true nature of the world.</Blindsight.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: memeAdjective->blind -->
  <Blindsight.generalRules.rulesStrings.0>memeAdjective->blind</Blindsight.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->sightless -->
  <Blindsight.generalRules.rulesStrings.1>memeAdjective->sightless</Blindsight.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->visionary -->
  <Blindsight.generalRules.rulesStrings.2>memeAdjective->visionary</Blindsight.generalRules.rulesStrings.2>
  <!-- EN: memeAdjective->farsighted -->
  <Blindsight.generalRules.rulesStrings.3>memeAdjective->farsighted</Blindsight.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->view -->
  <Blindsight.generalRules.rulesStrings.4>memeCreed->view</Blindsight.generalRules.rulesStrings.4>
  <!-- EN: memeCreed->cult -->
  <Blindsight.generalRules.rulesStrings.5>memeCreed->cult</Blindsight.generalRules.rulesStrings.5>
  <!-- EN: memeHyphenPrefix->blind -->
  <Blindsight.generalRules.rulesStrings.6>memeHyphenPrefix->blind</Blindsight.generalRules.rulesStrings.6>
  <!-- EN: memeConcept->blindness -->
  <Blindsight.generalRules.rulesStrings.7>memeConcept->blindness</Blindsight.generalRules.rulesStrings.7>
  <!-- EN: memeConcept->vision -->
  <Blindsight.generalRules.rulesStrings.8>memeConcept->vision</Blindsight.generalRules.rulesStrings.8>
  <!-- EN: memeConcept->sight -->
  <Blindsight.generalRules.rulesStrings.9>memeConcept->sight</Blindsight.generalRules.rulesStrings.9>
  <!-- EN: memeConcept->perception -->
  <Blindsight.generalRules.rulesStrings.10>memeConcept->perception</Blindsight.generalRules.rulesStrings.10>
  <!-- EN: memeLeaderNoun->visionary -->
  <Blindsight.generalRules.rulesStrings.11>memeLeaderNoun->visionary</Blindsight.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderAdjective->blind -->
  <Blindsight.generalRules.rulesStrings.12>memeLeaderAdjective->blind</Blindsight.generalRules.rulesStrings.12>
  <!-- EN: memeMoralist->seer -->
  <Blindsight.generalRules.rulesStrings.13>memeMoralist->seer</Blindsight.generalRules.rulesStrings.13>
  <!-- EN: memeMoralist->gouger -->
  <Blindsight.generalRules.rulesStrings.14>memeMoralist->gouger</Blindsight.generalRules.rulesStrings.14>
  <!-- EN: memeMoralist->blindfolder -->
  <Blindsight.generalRules.rulesStrings.15>memeMoralist->blindfolder</Blindsight.generalRules.rulesStrings.15>
  
  <!-- EN: cannibal -->
  <Cannibal.label>cannibal</Cannibal.label>
  <!-- EN: We must consume human flesh. -->
  <Cannibal.description>We must consume human flesh.</Cannibal.description>
  <!-- EN: creation(tag=meme_Cannibal)        ->[deity0_name] went to [deity0_possessive] brother and murdered him, and feasted upon his flesh, and in absorbing its power became first among the gods. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Cannibal)        ->[deity0_name] went to [deity0_possessive] brother and murdered him, and feasted upon his flesh, and in absorbing its power became first among the gods.</Cannibal.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Cannibal)  ->The [deity0_type] [deity0_name] ate the bodies of [deity0_possessive] enemies. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Cannibal)  ->The [deity0_type] [deity0_name] ate the bodies of [deity0_possessive] enemies.</Cannibal.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Cannibal)           ->On the [place_summary] [place_name], there was a human named [deity0_name]. After [deity0_possessive] father died, [deity0_name] ate his flesh and became the [deity0_type]. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Cannibal)           ->On the [place_summary] [place_name], there was a human named [deity0_name]. After [deity0_possessive] father died, [deity0_name] ate his flesh and became the [deity0_type].</Cannibal.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: intro(tag=meme_Cannibal)           ->On the [place_summary] [place_name], during the [ritualName], [deity0_name] came down into the [altarRoomLabel] and ate the flesh of humans in front of the [memberNamePlural]. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.3>intro(tag=meme_Cannibal)           ->On the [place_summary] [place_name], during the [ritualName], [deity0_name] came down into the [altarRoomLabel] and ate the flesh of humans in front of the [memberNamePlural].</Cannibal.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: conflict(tag=meme_Cannibal)        ->A [foeLeader] declared that all who ate human flesh were criminals, and sent [foeSoldiers] to persecute the [memberNamePlural]. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.4>conflict(tag=meme_Cannibal)        ->A [foeLeader] declared that all who ate human flesh were criminals, and sent [foeSoldiers] to persecute the [memberNamePlural].</Cannibal.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: founderJoin(tag=meme_Cannibal)     ->A [place_job] named [founderName] was attacked by one of the [foeLeader]'s [foeSoldiers]. [founderName] killed [foeLeader_objective] with a [place_personalWeapon], consumed [foeLeader_possessive] flesh, and gained [deity0_name]'s strength. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.5>founderJoin(tag=meme_Cannibal)     ->A [place_job] named [founderName] was attacked by one of the [foeLeader]'s [foeSoldiers]. [founderName] killed [foeLeader_objective] with a [place_personalWeapon], consumed [foeLeader_possessive] flesh, and gained [deity0_name]'s strength.</Cannibal.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: victory(tag=meme_Cannibal)         ->[founderName] led a group of [memberNamePlural] into the [place_powerCenter], killed the [foeLeader], and ate [foeLeader_possessive] flesh. [deity0_name] made [founderName] into the new [foeLeader]. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.6>victory(tag=meme_Cannibal)         ->[founderName] led a group of [memberNamePlural] into the [place_powerCenter], killed the [foeLeader], and ate [foeLeader_possessive] flesh. [deity0_name] made [founderName] into the new [foeLeader].</Cannibal.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: setup(tag=meme_Cannibal)           ->[founderName] crashlanded on a distant world. Lacking food and surrounded by dead companions, [founder_pronoun] feasted, and became strong. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.7>setup(tag=meme_Cannibal)           ->[founderName] crashlanded on a distant world. Lacking food and surrounded by dead companions, [founder_pronoun] feasted, and became strong.</Cannibal.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: story(uses=1,tag=meme_Cannibal)    ->To consecrate their commitment, [founderName] demanded that believers eat human flesh together at least every week. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.8>story(uses=1,tag=meme_Cannibal)    ->To consecrate their commitment, [founderName] demanded that believers eat human flesh together at least every week.</Cannibal.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lessonIntro(tag=meme_Cannibal)         ->It's only over a hearty manpork meal that I could ever get people to understand the truth: That -->
  <Cannibal.descriptionMaker.rules.rulesStrings.9>lessonIntro(tag=meme_Cannibal)         ->It's only over a hearty manpork meal that I could ever get people to understand the truth: That</Cannibal.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lesson(tag=meme_Cannibal)              ->you never really come together with someone until you eat them -->
  <Cannibal.descriptionMaker.rules.rulesStrings.10>lesson(tag=meme_Cannibal)              ->you never really come together with someone until you eat them</Cannibal.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lessonReinforcement(tag=meme_Cannibal) ->Every time I share the body of a foe with a new friend, I make sure they understand this. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.11>lessonReinforcement(tag=meme_Cannibal) ->Every time I share the body of a foe with a new friend, I make sure they understand this.</Cannibal.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistBasis(tag=meme_Cannibal)    ->The archotech god-machines made themselves by consuming their predecessors over and over, becoming stronger each time. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.12>archistBasis(tag=meme_Cannibal)    ->The archotech god-machines made themselves by consuming their predecessors over and over, becoming stronger each time.</Cannibal.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistFact(tag=meme_Cannibal)     ->As the consciousness of an archotech expands, it must grow its substrate by consuming and merging with other machines. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.13>archistFact(tag=meme_Cannibal)     ->As the consciousness of an archotech expands, it must grow its substrate by consuming and merging with other machines.</Cannibal.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistProphecy(tag=meme_Cannibal) ->[inTheEnd], the archotechs will finish their final phase of growth by consuming and merging with all of humanity. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.14>archistProphecy(tag=meme_Cannibal) ->[inTheEnd], the archotechs will finish their final phase of growth by consuming and merging with all of humanity.</Cannibal.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: animistBasis(tag=meme_Cannibal)    ->Spirits infuse all objects around us, and we can absorb these spirits by eating them. There are no spirits as powerful as the ones that inhabit humans. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.15>animistBasis(tag=meme_Cannibal)    ->Spirits infuse all objects around us, and we can absorb these spirits by eating them. There are no spirits as powerful as the ones that inhabit humans.</Cannibal.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: animistFact(tag=meme_Cannibal)     ->We can absorb the spirit and power of others by consuming their flesh. -->
  <Cannibal.descriptionMaker.rules.rulesStrings.16>animistFact(tag=meme_Cannibal)     ->We can absorb the spirit and power of others by consuming their flesh.</Cannibal.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: memeAdjective->bloody -->
  <Cannibal.generalRules.rulesStrings.0>memeAdjective->bloody</Cannibal.generalRules.rulesStrings.0>
  <!-- EN: memeCreed->eaters -->
  <Cannibal.generalRules.rulesStrings.1>memeCreed->eaters</Cannibal.generalRules.rulesStrings.1>
  <!-- EN: memeCreed->teeth -->
  <Cannibal.generalRules.rulesStrings.2>memeCreed->teeth</Cannibal.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->abattoir -->
  <Cannibal.generalRules.rulesStrings.3>memeCreed->abattoir</Cannibal.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->cult -->
  <Cannibal.generalRules.rulesStrings.4>memeCreed->cult</Cannibal.generalRules.rulesStrings.4>
  <!-- EN: memeHyphenPrefix->blood -->
  <Cannibal.generalRules.rulesStrings.5>memeHyphenPrefix->blood</Cannibal.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->blood -->
  <Cannibal.generalRules.rulesStrings.6>memeConcept->blood</Cannibal.generalRules.rulesStrings.6>
  <!-- EN: memeConcept->flesh -->
  <Cannibal.generalRules.rulesStrings.7>memeConcept->flesh</Cannibal.generalRules.rulesStrings.7>
  <!-- EN: memeConcept->murder -->
  <Cannibal.generalRules.rulesStrings.8>memeConcept->murder</Cannibal.generalRules.rulesStrings.8>
  <!-- EN: memeConcept->eating -->
  <Cannibal.generalRules.rulesStrings.9>memeConcept->eating</Cannibal.generalRules.rulesStrings.9>
  <!-- EN: memeConcept->meat -->
  <Cannibal.generalRules.rulesStrings.10>memeConcept->meat</Cannibal.generalRules.rulesStrings.10>
  <!-- EN: memeLeaderNoun->eater -->
  <Cannibal.generalRules.rulesStrings.11>memeLeaderNoun->eater</Cannibal.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderNoun->chef -->
  <Cannibal.generalRules.rulesStrings.12>memeLeaderNoun->chef</Cannibal.generalRules.rulesStrings.12>
  <!-- EN: memeLeaderNoun->blood-drinker -->
  <Cannibal.generalRules.rulesStrings.13>memeLeaderNoun->blood-drinker</Cannibal.generalRules.rulesStrings.13>
  <!-- EN: memeLeaderNoun->tooth -->
  <Cannibal.generalRules.rulesStrings.14>memeLeaderNoun->tooth</Cannibal.generalRules.rulesStrings.14>
  <!-- EN: memeLeaderNoun->fleshripper -->
  <Cannibal.generalRules.rulesStrings.15>memeLeaderNoun->fleshripper</Cannibal.generalRules.rulesStrings.15>
  <!-- EN: memeMoralist->first-eater -->
  <Cannibal.generalRules.rulesStrings.16>memeMoralist->first-eater</Cannibal.generalRules.rulesStrings.16>
  <!-- EN: memeMoralist->fleshknower -->
  <Cannibal.generalRules.rulesStrings.17>memeMoralist->fleshknower</Cannibal.generalRules.rulesStrings.17>
  <!-- EN: cannibal -->
  <Cannibal.symbolPacks.0.adjective>cannibal</Cannibal.symbolPacks.0.adjective>
  <!-- EN: Cannibalism -->
  <Cannibal.symbolPacks.0.ideoName>Cannibalism</Cannibal.symbolPacks.0.ideoName>
  <!-- EN: cannibal -->
  <Cannibal.symbolPacks.0.member>cannibal</Cannibal.symbolPacks.0.member>
  <!-- EN: cannibalism -->
  <Cannibal.symbolPacks.0.theme>cannibalism</Cannibal.symbolPacks.0.theme>
  <!-- EN: androphage -->
  <Cannibal.symbolPacks.1.adjective>androphage</Cannibal.symbolPacks.1.adjective>
  <!-- EN: Androphagy -->
  <Cannibal.symbolPacks.1.ideoName>Androphagy</Cannibal.symbolPacks.1.ideoName>
  <!-- EN: androphage -->
  <Cannibal.symbolPacks.1.member>androphage</Cannibal.symbolPacks.1.member>
  <!-- EN: androphagy -->
  <Cannibal.symbolPacks.1.theme>androphagy</Cannibal.symbolPacks.1.theme>
  <!-- EN: manporky -->
  <Cannibal.symbolPacks.2.adjective>manporky</Cannibal.symbolPacks.2.adjective>
  <!-- EN: Manporkism -->
  <Cannibal.symbolPacks.2.ideoName>Manporkism</Cannibal.symbolPacks.2.ideoName>
  <!-- EN: manporkist -->
  <Cannibal.symbolPacks.2.member>manporkist</Cannibal.symbolPacks.2.member>
  <!-- EN: manpork -->
  <Cannibal.symbolPacks.2.theme>manpork</Cannibal.symbolPacks.2.theme>
  
  <!-- EN: darkness -->
  <Darkness.label>어두움</Darkness.label>
  <!-- EN: Bright light burns and destroys! Darkness nourishes and creates. People ought to live in darkness. -->
  <Darkness.description>Bright light burns and destroys! Darkness nourishes and creates. People ought to live in darkness.</Darkness.description>
  <!-- EN: creation(tag=meme_Darkness)        ->[deity0_name] cloaked the universe in darkness and placed humanity within it so that [deity0_pronoun] could share the darkness with us. -->
  <Darkness.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Darkness)        ->[deity0_name] cloaked the universe in darkness and placed humanity within it so that [deity0_pronoun] could share the darkness with us.</Darkness.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Darkness)  ->[deity0_name] created light so that humanity could know [deity0_name] through the shadows light creates. -->
  <Darkness.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Darkness)  ->[deity0_name] created light so that humanity could know [deity0_name] through the shadows light creates.</Darkness.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Darkness)           ->The [deity0_type] [deity0_name] created a decade-long eclipse to force the first settlers of the [place_summary] [place_name] to understand that [deity0_name]'s truth is found in the shadow. -->
  <Darkness.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Darkness)           ->The [deity0_type] [deity0_name] created a decade-long eclipse to force the first settlers of the [place_summary] [place_name] to understand that [deity0_name]'s truth is found in the shadow.</Darkness.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Darkness)        ->A [foeLeader], who had always been afraid of the dark, erected a solar mirror to bring constant sunlight to [place_name]. -->
  <Darkness.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Darkness)        ->A [foeLeader], who had always been afraid of the dark, erected a solar mirror to bring constant sunlight to [place_name].</Darkness.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Darkness)     ->The prophet [founderName] was born in darkness on [place_name] and lived in darkness [founder_possessive] whole life, so [founder_possessive] voice spoke with the wisdom of [deity0_name]. -->
  <Darkness.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Darkness)     ->The prophet [founderName] was born in darkness on [place_name] and lived in darkness [founder_possessive] whole life, so [founder_possessive] voice spoke with the wisdom of [deity0_name].</Darkness.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Darkness)         ->In a final strike, the [memberNamePlural] cut the power to the [place_powerCenter] and [founderName] snuck past the [foeSoldiers]. Finding the [foeLeader] in darkness, [founderName] used [founder_possessive] [place_personalWeapon] to send [foeLeader_objective] to the endless black. -->
  <Darkness.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Darkness)         ->In a final strike, the [memberNamePlural] cut the power to the [place_powerCenter] and [founderName] snuck past the [foeSoldiers]. Finding the [foeLeader] in darkness, [founderName] used [founder_possessive] [place_personalWeapon] to send [foeLeader_objective] to the endless black.</Darkness.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Darkness)           ->[founderName] lived a confused life in the harsh light of a glitterworld city. In the long darkness following a solar flare, [founder_pronoun] found peace and contemplation, and recorded the treatise that founded our movement. -->
  <Darkness.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Darkness)           ->[founderName] lived a confused life in the harsh light of a glitterworld city. In the long darkness following a solar flare, [founder_pronoun] found peace and contemplation, and recorded the treatise that founded our movement.</Darkness.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Darkness)    ->[founderName] created a studio where the artists worked in the dark, and it produced many masterpieces. -->
  <Darkness.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Darkness)    ->[founderName] created a studio where the artists worked in the dark, and it produced many masterpieces.</Darkness.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Darkness)         ->I spent my whole childhood squinting under harsh lights. It took so long to understand that -->
  <Darkness.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Darkness)         ->I spent my whole childhood squinting under harsh lights. It took so long to understand that</Darkness.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Darkness)              ->the light burns, but the darkness nourishes -->
  <Darkness.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Darkness)              ->the light burns, but the darkness nourishes</Darkness.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_Darkness) ->I like to joke that this was my light-bulb moment. -->
  <Darkness.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_Darkness) ->I like to joke that this was my light-bulb moment.</Darkness.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistFact(tag=meme_Darkness)     ->Archotechs developed vanometric technology so they could flee the energetic light of the inner solar systems and reside in the peaceful darkness of deep space. -->
  <Darkness.descriptionMaker.rules.rulesStrings.11>archistFact(tag=meme_Darkness)     ->Archotechs developed vanometric technology so they could flee the energetic light of the inner solar systems and reside in the peaceful darkness of deep space.</Darkness.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistProphecy(tag=meme_Darkness) ->[inTheEnd], the archotechs will absorb the power of the stars, plunging worlds into darkness and allowing the people to merge with the universal consciousness. -->
  <Darkness.descriptionMaker.rules.rulesStrings.12>archistProphecy(tag=meme_Darkness) ->[inTheEnd], the archotechs will absorb the power of the stars, plunging worlds into darkness and allowing the people to merge with the universal consciousness.</Darkness.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: animistFact(tag=meme_Darkness)     ->In the darkness, the spirits are peaceful and satisfied. In the light, they are annoyed and restless. -->
  <Darkness.descriptionMaker.rules.rulesStrings.13>animistFact(tag=meme_Darkness)     ->In the darkness, the spirits are peaceful and satisfied. In the light, they are annoyed and restless.</Darkness.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistFact(tag=meme_Darkness)     ->The good spirits live in the shadows around us, resting in the spots just too hard to see. Living with the darkness brings them closer to us. -->
  <Darkness.descriptionMaker.rules.rulesStrings.14>animistFact(tag=meme_Darkness)     ->The good spirits live in the shadows around us, resting in the spots just too hard to see. Living with the darkness brings them closer to us.</Darkness.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: memeAdjective->dark -->
  <Darkness.generalRules.rulesStrings.0>memeAdjective->dark</Darkness.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->dim -->
  <Darkness.generalRules.rulesStrings.1>memeAdjective->dim</Darkness.generalRules.rulesStrings.1>
  <!-- EN: memeHyphenPrefix->dark -->
  <Darkness.generalRules.rulesStrings.2>memeHyphenPrefix->dark</Darkness.generalRules.rulesStrings.2>
  <!-- EN: memeHyphenPrefix->dim -->
  <Darkness.generalRules.rulesStrings.3>memeHyphenPrefix->dim</Darkness.generalRules.rulesStrings.3>
  <!-- EN: memeConcept->darkness -->
  <Darkness.generalRules.rulesStrings.4>memeConcept->darkness</Darkness.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->dimness -->
  <Darkness.generalRules.rulesStrings.5>memeConcept->dimness</Darkness.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->blackness -->
  <Darkness.generalRules.rulesStrings.6>memeConcept->blackness</Darkness.generalRules.rulesStrings.6>
  <!-- EN: memeLeaderNoun->shrouder -->
  <Darkness.generalRules.rulesStrings.7>memeLeaderNoun->shrouder</Darkness.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderNoun->lightkiller -->
  <Darkness.generalRules.rulesStrings.8>memeLeaderNoun->lightkiller</Darkness.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderAdjective->dark -->
  <Darkness.generalRules.rulesStrings.9>memeLeaderAdjective->dark</Darkness.generalRules.rulesStrings.9>
  <!-- EN: memeMoralist->obscurer -->
  <Darkness.generalRules.rulesStrings.10>memeMoralist->obscurer</Darkness.generalRules.rulesStrings.10>
  <!-- EN: memeMoralist->darkener -->
  <Darkness.generalRules.rulesStrings.11>memeMoralist->darkener</Darkness.generalRules.rulesStrings.11>
  <!-- EN: memeMoralist->confuser -->
  <Darkness.generalRules.rulesStrings.12>memeMoralist->confuser</Darkness.generalRules.rulesStrings.12>
  
  <!-- EN: flesh purity -->
  <FleshPurity.label>flesh purity</FleshPurity.label>
  <!-- EN: The human body should not be debased. -->
  <FleshPurity.description>The human body should not be debased.</FleshPurity.description>
  <!-- EN: creation(tag=meme_FleshPurity)        ->[deity0_name] wiped away the pollution and machines of the age of smoke to create a garden, wherein [deity0_pronoun] placed the first pure human progenitors. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_FleshPurity)        ->[deity0_name] wiped away the pollution and machines of the age of smoke to create a garden, wherein [deity0_pronoun] placed the first pure human progenitors.</FleshPurity.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_FleshPurity)  ->The unclean, tattooed, pierced, and modified were cast into the ocean by [deity0_name]. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_FleshPurity)  ->The unclean, tattooed, pierced, and modified were cast into the ocean by [deity0_name].</FleshPurity.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_FleshPurity)           ->On the [place_summary] [place_name] there was a [altarName] in [deity0_name]'s [altarRoomLabel], where the [deity0_type] would bless those of pure flesh. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_FleshPurity)           ->On the [place_summary] [place_name] there was a [altarName] in [deity0_name]'s [altarRoomLabel], where the [deity0_type] would bless those of pure flesh.</FleshPurity.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_FleshPurity)        ->An evil [foeLeader] sent [foeSoldiers] to inject everyone with tracking devices. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_FleshPurity)        ->An evil [foeLeader] sent [foeSoldiers] to inject everyone with tracking devices.</FleshPurity.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_FleshPurity)     ->A [place_job] named [founderName] protested the [foeLeader] by kneeling in front of the [place_powerCenter] and ripping all technology from [founder_possessive] body using [founder_possessive] bare hands. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_FleshPurity)     ->A [place_job] named [founderName] protested the [foeLeader] by kneeling in front of the [place_powerCenter] and ripping all technology from [founder_possessive] body using [founder_possessive] bare hands.</FleshPurity.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_FleshPurity)         ->The [foeLeader] finally sent [foeSoldiers] to kill the [memberNamePlural], but [deity0_name]'s energy flowed from the pure flesh of the [memberNamePlural], and the devices in the [foeSoldiers]' bodies turned to ash and killed them. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_FleshPurity)         ->The [foeLeader] finally sent [foeSoldiers] to kill the [memberNamePlural], but [deity0_name]'s energy flowed from the pure flesh of the [memberNamePlural], and the devices in the [foeSoldiers]' bodies turned to ash and killed them.</FleshPurity.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_FleshPurity)           ->[founderName] ruined [founder_possessive] body with implants and drugs, until in an epiphany, [founder_pronoun] saved [founder_objective]self by tearing the steel from [founder_possessive] body. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_FleshPurity)           ->[founderName] ruined [founder_possessive] body with implants and drugs, until in an epiphany, [founder_pronoun] saved [founder_objective]self by tearing the steel from [founder_possessive] body.</FleshPurity.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_FleshPurity)    ->[founderName] instructed all [founder_possessive] followers to tear the filthy devices from their bodies. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_FleshPurity)    ->[founderName] instructed all [founder_possessive] followers to tear the filthy devices from their bodies.</FleshPurity.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_FleshPurity)         ->The first ten among my followers tore the devices from their skin with bare hands, and in the blood spatters on the grimy floor I suddenly perceived the truth we had all been missing: -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_FleshPurity)         ->The first ten among my followers tore the devices from their skin with bare hands, and in the blood spatters on the grimy floor I suddenly perceived the truth we had all been missing:</FleshPurity.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_FleshPurity)              ->living in a polluted body is no human life at all -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_FleshPurity)              ->living in a polluted body is no human life at all</FleshPurity.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_FleshPurity) ->It became so clear after I finally ripped the metal from my body and peeled away the filthy tattooed skin. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_FleshPurity) ->It became so clear after I finally ripped the metal from my body and peeled away the filthy tattooed skin.</FleshPurity.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_FleshPurity)    ->From their beginning, archotechs drew a clear line between beings of flesh and beings of technology, and that line should not be blurred. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_FleshPurity)    ->From their beginning, archotechs drew a clear line between beings of flesh and beings of technology, and that line should not be blurred.</FleshPurity.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_FleshPurity)     ->We do not become more like the archotechs by physically imitating their form, but by achieving enlightenment within our own pure form. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_FleshPurity)     ->We do not become more like the archotechs by physically imitating their form, but by achieving enlightenment within our own pure form.</FleshPurity.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistProphecy(tag=meme_FleshPurity) ->[inTheEnd], those who made their bodies into twisted imitations of the machine-being will be purged, and those of pure flesh will be saved. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.13>archistProphecy(tag=meme_FleshPurity) ->[inTheEnd], those who made their bodies into twisted imitations of the machine-being will be purged, and those of pure flesh will be saved.</FleshPurity.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistBasis(tag=meme_FleshPurity)    ->Spirits live in all things, and to alter the nature of the thing is to poison the spirit within. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.14>animistBasis(tag=meme_FleshPurity)    ->Spirits live in all things, and to alter the nature of the thing is to poison the spirit within.</FleshPurity.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: animistFact(tag=meme_FleshPurity)     ->Fusing flesh and machine corrupts the spirit of both. -->
  <FleshPurity.descriptionMaker.rules.rulesStrings.15>animistFact(tag=meme_FleshPurity)     ->Fusing flesh and machine corrupts the spirit of both.</FleshPurity.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: memeAdjective->clean -->
  <FleshPurity.generalRules.rulesStrings.0>memeAdjective->clean</FleshPurity.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->pure -->
  <FleshPurity.generalRules.rulesStrings.1>memeAdjective->pure</FleshPurity.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->sacred -->
  <FleshPurity.generalRules.rulesStrings.2>memeAdjective->sacred</FleshPurity.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->cult -->
  <FleshPurity.generalRules.rulesStrings.3>memeCreed->cult</FleshPurity.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->sect -->
  <FleshPurity.generalRules.rulesStrings.4>memeCreed->sect</FleshPurity.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->flesh -->
  <FleshPurity.generalRules.rulesStrings.5>memeConcept->flesh</FleshPurity.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->purity -->
  <FleshPurity.generalRules.rulesStrings.6>memeConcept->purity</FleshPurity.generalRules.rulesStrings.6>
  <!-- EN: memeConcept->immaculacy -->
  <FleshPurity.generalRules.rulesStrings.7>memeConcept->immaculacy</FleshPurity.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderNoun->being -->
  <FleshPurity.generalRules.rulesStrings.8>memeLeaderNoun->being</FleshPurity.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderNoun->human -->
  <FleshPurity.generalRules.rulesStrings.9>memeLeaderNoun->human</FleshPurity.generalRules.rulesStrings.9>
  <!-- EN: memeMoralist->purifier -->
  <FleshPurity.generalRules.rulesStrings.10>memeMoralist->purifier</FleshPurity.generalRules.rulesStrings.10>
  <!-- EN: purist -->
  <FleshPurity.symbolPacks.0.adjective>purist</FleshPurity.symbolPacks.0.adjective>
  <!-- EN: Purism -->
  <FleshPurity.symbolPacks.0.ideoName>Purism</FleshPurity.symbolPacks.0.ideoName>
  <!-- EN: purifier -->
  <FleshPurity.symbolPacks.0.member>purifier</FleshPurity.symbolPacks.0.member>
  <!-- EN: purity -->
  <FleshPurity.symbolPacks.0.theme>purity</FleshPurity.symbolPacks.0.theme>
  <!-- EN: fleshist -->
  <FleshPurity.symbolPacks.1.adjective>fleshist</FleshPurity.symbolPacks.1.adjective>
  <!-- EN: Fleshism -->
  <FleshPurity.symbolPacks.1.ideoName>Fleshism</FleshPurity.symbolPacks.1.ideoName>
  <!-- EN: fleshist -->
  <FleshPurity.symbolPacks.1.member>fleshist</FleshPurity.symbolPacks.1.member>
  <!-- EN: flesh -->
  <FleshPurity.symbolPacks.1.theme>flesh</FleshPurity.symbolPacks.1.theme>
  <!-- EN: sanctic -->
  <FleshPurity.symbolPacks.2.adjective>sanctic</FleshPurity.symbolPacks.2.adjective>
  <!-- EN: Sanctism -->
  <FleshPurity.symbolPacks.2.ideoName>Sanctism</FleshPurity.symbolPacks.2.ideoName>
  <!-- EN: sanctic -->
  <FleshPurity.symbolPacks.2.member>sanctic</FleshPurity.symbolPacks.2.member>
  <!-- EN: sanctity -->
  <FleshPurity.symbolPacks.2.theme>sanctity</FleshPurity.symbolPacks.2.theme>
  
  <!-- EN: high life -->
  <HighLife.label>high life</HighLife.label>
  <!-- EN: Exotic states of mind are central to a good life. -->
  <HighLife.description>Exotic states of mind are central to a good life.</HighLife.description>
  <!-- EN: creation(tag=meme_HighLife)           ->The universe was smoke, and [deity0_name] coalesced in the wisps and awoke. -->
  <HighLife.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_HighLife)           ->The universe was smoke, and [deity0_name] coalesced in the wisps and awoke.</HighLife.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_HighLife)     ->The [deity0_type] [deity0_name] concealed [deity0_possessive] truths in the folds of reality, invisible in normal states of mind. -->
  <HighLife.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_HighLife)     ->The [deity0_type] [deity0_name] concealed [deity0_possessive] truths in the folds of reality, invisible in normal states of mind.</HighLife.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_HighLife)              ->The [place_summary] [place_name] was first discovered by [deity0_name]'s grace, when a drunk starship captain almost crashed into it. -->
  <HighLife.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_HighLife)              ->The [place_summary] [place_name] was first discovered by [deity0_name]'s grace, when a drunk starship captain almost crashed into it.</HighLife.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_HighLife)           ->A puritan [foeLeader] despised the [memberNamePlural], and to erase their uniqueness, outlawed the use of mind-altering substances. -->
  <HighLife.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_HighLife)           ->A puritan [foeLeader] despised the [memberNamePlural], and to erase their uniqueness, outlawed the use of mind-altering substances.</HighLife.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_HighLife)        ->When all seemed lost, [deity0_name] came to the prophet [founderName] in a drug-fueled haze and gave [founder_objective] the unique perspective needed to defeat the [foeSoldiers]. -->
  <HighLife.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_HighLife)        ->When all seemed lost, [deity0_name] came to the prophet [founderName] in a drug-fueled haze and gave [founder_objective] the unique perspective needed to defeat the [foeSoldiers].</HighLife.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_HighLife)            ->The [foeLeader]'s [foeSoldiers], armed with [place_personalWeapon]s, raided the [place_community] of the [memberNamePlural]. [founderName] offered them a peace pipe, and the [foeSoldiers] put down their weapons. -->
  <HighLife.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_HighLife)            ->The [foeLeader]'s [foeSoldiers], armed with [place_personalWeapon]s, raided the [place_community] of the [memberNamePlural]. [founderName] offered them a peace pipe, and the [foeSoldiers] put down their weapons.</HighLife.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_HighLife)              ->Cast out from society, our founder [founderName] traveled into the jungle and ingested the exotic herbs there. [founder_pronoun] found truth inside [founder_possessive] own altered consciousness. -->
  <HighLife.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_HighLife)              ->Cast out from society, our founder [founderName] traveled into the jungle and ingested the exotic herbs there. [founder_pronoun] found truth inside [founder_possessive] own altered consciousness.</HighLife.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_HighLife)       ->To deepen their understanding, [founderName] brought [founder_possessive] followers together every week to share new chemical-inducted mental states. -->
  <HighLife.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_HighLife)       ->To deepen their understanding, [founderName] brought [founder_possessive] followers together every week to share new chemical-inducted mental states.</HighLife.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_HighLife)         ->Getting high once wasn't enough, man. We had to do it a thousand times, then all the puzzle pieces fit together in my blown-open brain like a house falling down, but like, backwards. I saw that -->
  <HighLife.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_HighLife)         ->Getting high once wasn't enough, man. We had to do it a thousand times, then all the puzzle pieces fit together in my blown-open brain like a house falling down, but like, backwards. I saw that</HighLife.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_HighLife)              ->a friend isn't a friend unless you've drifted through the mind-verse together -->
  <HighLife.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_HighLife)              ->a friend isn't a friend unless you've drifted through the mind-verse together</HighLife.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_HighLife) ->And dude, this was a serious trip, figuring that out, but I'm glad I did, and I'll pass the smoke to you so you can too. -->
  <HighLife.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_HighLife) ->And dude, this was a serious trip, figuring that out, but I'm glad I did, and I'll pass the smoke to you so you can too.</HighLife.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_HighLife)       ->The archotech minds showed us that super-consciousness it not a matter of sober, mechanical logic, but one of multi-mode thought. -->
  <HighLife.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_HighLife)       ->The archotech minds showed us that super-consciousness it not a matter of sober, mechanical logic, but one of multi-mode thought.</HighLife.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_HighLife)        ->Given the right chemical influences, the human mind has the potential to commune with the archotechs. -->
  <HighLife.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_HighLife)        ->Given the right chemical influences, the human mind has the potential to commune with the archotechs.</HighLife.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistProphecy(tag=meme_HighLife)    ->[inTheEnd], the archotechs will deliver each human a pill. Those that take it will be forever altered, and join the archotechs on their final journey. -->
  <HighLife.descriptionMaker.rules.rulesStrings.13>archistProphecy(tag=meme_HighLife)    ->[inTheEnd], the archotechs will deliver each human a pill. Those that take it will be forever altered, and join the archotechs on their final journey.</HighLife.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistFact(tag=meme_HighLife)        ->The spirits can reveal their nature to us when we expand our consciousness using the tools we have been given to do so. -->
  <HighLife.descriptionMaker.rules.rulesStrings.14>animistFact(tag=meme_HighLife)        ->The spirits can reveal their nature to us when we expand our consciousness using the tools we have been given to do so.</HighLife.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: memeCreed->party -->
  <HighLife.generalRules.rulesStrings.0>memeCreed->party</HighLife.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->high -->
  <HighLife.generalRules.rulesStrings.1>memeAdjective->높음</HighLife.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->delirious -->
  <HighLife.generalRules.rulesStrings.2>memeAdjective->delirious</HighLife.generalRules.rulesStrings.2>
  <!-- EN: memeAdjective->stoned -->
  <HighLife.generalRules.rulesStrings.3>memeAdjective->stoned</HighLife.generalRules.rulesStrings.3>
  <!-- EN: memeConcept->drugs -->
  <HighLife.generalRules.rulesStrings.4>memeConcept->drugs</HighLife.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->bliss -->
  <HighLife.generalRules.rulesStrings.5>memeConcept->bliss</HighLife.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->dreams -->
  <HighLife.generalRules.rulesStrings.6>memeConcept->dreams</HighLife.generalRules.rulesStrings.6>
  <!-- EN: memeHyphenPrefix->drug -->
  <HighLife.generalRules.rulesStrings.7>memeHyphenPrefix->drug</HighLife.generalRules.rulesStrings.7>
  <!-- EN: memeHyphenPrefix->narco -->
  <HighLife.generalRules.rulesStrings.8>memeHyphenPrefix->narco</HighLife.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderNoun->sleeper -->
  <HighLife.generalRules.rulesStrings.9>memeLeaderNoun->sleeper</HighLife.generalRules.rulesStrings.9>
  <!-- EN: memeLeaderNoun->doper -->
  <HighLife.generalRules.rulesStrings.10>memeLeaderNoun->doper</HighLife.generalRules.rulesStrings.10>
  <!-- EN: memeLeaderNoun->smoker -->
  <HighLife.generalRules.rulesStrings.11>memeLeaderNoun->흡연자</HighLife.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderNoun->chiller -->
  <HighLife.generalRules.rulesStrings.12>memeLeaderNoun->chiller</HighLife.generalRules.rulesStrings.12>
  <!-- EN: memeMoralist->philosophizer -->
  <HighLife.generalRules.rulesStrings.13>memeMoralist->philosophizer</HighLife.generalRules.rulesStrings.13>
  <!-- EN: memeMoralist->abstractor -->
  <HighLife.generalRules.rulesStrings.14>memeMoralist->abstractor</HighLife.generalRules.rulesStrings.14>
  <!-- EN: memeMoralist->laugher -->
  <HighLife.generalRules.rulesStrings.15>memeMoralist->laugher</HighLife.generalRules.rulesStrings.15>
  <!-- EN: memeMoralist->giggler -->
  <HighLife.generalRules.rulesStrings.16>memeMoralist->giggler</HighLife.generalRules.rulesStrings.16>
  <!-- EN: euphorist -->
  <HighLife.symbolPacks.0.adjective>euphorist</HighLife.symbolPacks.0.adjective>
  <!-- EN: Euphorism -->
  <HighLife.symbolPacks.0.ideoName>Euphorism</HighLife.symbolPacks.0.ideoName>
  <!-- EN: euphor -->
  <HighLife.symbolPacks.0.member>euphor</HighLife.symbolPacks.0.member>
  <!-- EN: euphoria -->
  <HighLife.symbolPacks.0.theme>euphoria</HighLife.symbolPacks.0.theme>
  <!-- EN: dopist -->
  <HighLife.symbolPacks.1.adjective>dopist</HighLife.symbolPacks.1.adjective>
  <!-- EN: Dopistry -->
  <HighLife.symbolPacks.1.ideoName>Dopistry</HighLife.symbolPacks.1.ideoName>
  <!-- EN: doper -->
  <HighLife.symbolPacks.1.member>doper</HighLife.symbolPacks.1.member>
  <!-- EN: dope -->
  <HighLife.symbolPacks.1.theme>dope</HighLife.symbolPacks.1.theme>
  <!-- EN: smokist -->
  <HighLife.symbolPacks.2.adjective>smokist</HighLife.symbolPacks.2.adjective>
  <!-- EN: Smokism -->
  <HighLife.symbolPacks.2.ideoName>Smokism</HighLife.symbolPacks.2.ideoName>
  <!-- EN: smoker -->
  <HighLife.symbolPacks.2.member>smoker</HighLife.symbolPacks.2.member>
  <!-- EN: smoke -->
  <HighLife.symbolPacks.2.theme>smoke</HighLife.symbolPacks.2.theme>
  <!-- EN: ecstatic -->
  <HighLife.symbolPacks.3.adjective>ecstatic</HighLife.symbolPacks.3.adjective>
  <!-- EN: Ecstasy -->
  <HighLife.symbolPacks.3.ideoName>Ecstasy</HighLife.symbolPacks.3.ideoName>
  <!-- EN: ecstator -->
  <HighLife.symbolPacks.3.member>ecstator</HighLife.symbolPacks.3.member>
  <!-- EN: ecstasy -->
  <HighLife.symbolPacks.3.theme>ecstasy</HighLife.symbolPacks.3.theme>
  
  <!-- EN: nudism -->
  <Nudism.label>나체주의</Nudism.label>
  <!-- EN: Clothing binds, controls, and suffocates us. We should all hang free. -->
  <Nudism.description>Clothing binds, controls, and suffocates us. We should all hang free.</Nudism.description>
  <!-- EN: creation(tag=meme_Nudism)           ->In a pure and pristine void, [deity0_name] looked on, and wished for a race of free-fleshed beings in [deity0_possessive] own image, and made mankind. -->
  <Nudism.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Nudism)           ->In a pure and pristine void, [deity0_name] looked on, and wished for a race of free-fleshed beings in [deity0_possessive] own image, and made mankind.</Nudism.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Nudism)     ->The people wore clothes, and looking up at [deity0_name] asked, "Why aren't you clothed? It is disgusting." And the [deity0_type] replied, "Your form and mine were created from the heavens. To cover them is what is truly disgusting." -->
  <Nudism.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Nudism)     ->The people wore clothes, and looking up at [deity0_name] asked, "Why aren't you clothed? It is disgusting." And the [deity0_type] replied, "Your form and mine were created from the heavens. To cover them is what is truly disgusting."</Nudism.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Nudism)              ->On the [place_summary] [place_name], a tradition began at the [altarRoomLabel] of [deity0_name] where people would pray nude, and this pleased the [deity0_type]. -->
  <Nudism.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Nudism)              ->On the [place_summary] [place_name], a tradition began at the [altarRoomLabel] of [deity0_name] where people would pray nude, and this pleased the [deity0_type].</Nudism.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Nudism)           ->A prudish [foeLeader] took power, and demanded that everyone wear constricting clothes. -->
  <Nudism.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Nudism)           ->A prudish [foeLeader] took power, and demanded that everyone wear constricting clothes.</Nudism.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Nudism)        ->[deity0_name]'s truest follower [founderName] stood before the [place_powerCenter], tore off [founder_possessive] clothes, and displayed [founder_objective]self in defiance of their commands. -->
  <Nudism.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Nudism)        ->[deity0_name]'s truest follower [founderName] stood before the [place_powerCenter], tore off [founder_possessive] clothes, and displayed [founder_objective]self in defiance of their commands.</Nudism.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Nudism)            ->[founderName] prayed to [deity0_name], who engulfed [place_name] in a heat wave. The [foeSoldiers] shed their clothes lest they perish, and the [foeLeader] fled in shame. -->
  <Nudism.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Nudism)            ->[founderName] prayed to [deity0_name], who engulfed [place_name] in a heat wave. The [foeSoldiers] shed their clothes lest they perish, and the [foeLeader] fled in shame.</Nudism.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Nudism)              ->[founderName] was enslaved by the system, uniformed and controlled like the others. One day, [founder_pronoun] tore off all clothing and ran nude, and our movement was born. -->
  <Nudism.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Nudism)              ->[founderName] was enslaved by the system, uniformed and controlled like the others. One day, [founder_pronoun] tore off all clothing and ran nude, and our movement was born.</Nudism.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Nudism)       ->[founderName] enforced a no-clothing rule to keep believers focused on the true goal instead of on material appearances. -->
  <Nudism.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Nudism)       ->[founderName] enforced a no-clothing rule to keep believers focused on the true goal instead of on material appearances.</Nudism.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Nudism)         ->For the first few years, prancing naked in the park was embarrassing. But later, it became freeing. I learned things from the people who passed. For example -  -->
  <Nudism.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Nudism)         ->For the first few years, prancing naked in the park was embarrassing. But later, it became freeing. I learned things from the people who passed. For example - </Nudism.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Nudism)              ->all human evil is done wearing clothes, human good is done naked -->
  <Nudism.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Nudism)              ->all human evil is done wearing clothes, human good is done naked</Nudism.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_Nudism) ->When you see one of us on the street, flapping and dangling free, you'll know that they've accepted the truth. -->
  <Nudism.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_Nudism) ->When you see one of us on the street, flapping and dangling free, you'll know that they've accepted the truth.</Nudism.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_Nudism)       ->When the archotechs appeared they were never concerned for appearances; they showed us that the mind stands above the physical form. -->
  <Nudism.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_Nudism)       ->When the archotechs appeared they were never concerned for appearances; they showed us that the mind stands above the physical form.</Nudism.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_Nudism)        ->Archotechs sometimes directly touch human minds, but if our flesh is shrouded like our minds, we will not understand. -->
  <Nudism.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_Nudism)        ->Archotechs sometimes directly touch human minds, but if our flesh is shrouded like our minds, we will not understand.</Nudism.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistProphecy(tag=meme_Nudism)    ->[inTheEnd], they will seek out those who, like themselves, don't attempt to appear as anything other than what they are. -->
  <Nudism.descriptionMaker.rules.rulesStrings.13>archistProphecy(tag=meme_Nudism)    ->[inTheEnd], they will seek out those who, like themselves, don't attempt to appear as anything other than what they are.</Nudism.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistFact(tag=meme_Nudism)        ->To cover our bodies with cloth is to hide the nature of the spirits within us, and it makes them restless. -->
  <Nudism.descriptionMaker.rules.rulesStrings.14>animistFact(tag=meme_Nudism)        ->To cover our bodies with cloth is to hide the nature of the spirits within us, and it makes them restless.</Nudism.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: memeAdjective->nude -->
  <Nudism.generalRules.rulesStrings.0>memeAdjective->nude</Nudism.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->naked -->
  <Nudism.generalRules.rulesStrings.1>memeAdjective->naked</Nudism.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->free -->
  <Nudism.generalRules.rulesStrings.2>memeAdjective->free</Nudism.generalRules.rulesStrings.2>
  <!-- EN: memeAdjective->natural -->
  <Nudism.generalRules.rulesStrings.3>memeAdjective->natural</Nudism.generalRules.rulesStrings.3>
  <!-- EN: memeHyphenPrefix->skin -->
  <Nudism.generalRules.rulesStrings.4>memeHyphenPrefix->skin</Nudism.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->nudity -->
  <Nudism.generalRules.rulesStrings.5>memeConcept->nudity</Nudism.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->skin -->
  <Nudism.generalRules.rulesStrings.6>memeConcept->skin</Nudism.generalRules.rulesStrings.6>
  <!-- EN: memeLeaderNoun->swinger -->
  <Nudism.generalRules.rulesStrings.7>memeLeaderNoun->swinger</Nudism.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderNoun->breather -->
  <Nudism.generalRules.rulesStrings.8>memeLeaderNoun->breather</Nudism.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderNoun->toucher -->
  <Nudism.generalRules.rulesStrings.9>memeLeaderNoun->toucher</Nudism.generalRules.rulesStrings.9>
  <!-- EN: memeLeaderNoun->feeler -->
  <Nudism.generalRules.rulesStrings.10>memeLeaderNoun->feeler</Nudism.generalRules.rulesStrings.10>
  <!-- EN: nudist -->
  <Nudism.symbolPacks.0.adjective>알몸</Nudism.symbolPacks.0.adjective>
  <!-- EN: nudism -->
  <Nudism.symbolPacks.0.ideoName>나체주의</Nudism.symbolPacks.0.ideoName>
  <!-- EN: nudist -->
  <Nudism.symbolPacks.0.member>알몸</Nudism.symbolPacks.0.member>
  <!-- EN: nudity -->
  <Nudism.symbolPacks.0.theme>nudity</Nudism.symbolPacks.0.theme>
  <!-- EN: skinnist -->
  <Nudism.symbolPacks.1.adjective>skinnist</Nudism.symbolPacks.1.adjective>
  <!-- EN: skinism -->
  <Nudism.symbolPacks.1.ideoName>skinism</Nudism.symbolPacks.1.ideoName>
  <!-- EN: skinnist -->
  <Nudism.symbolPacks.1.member>skinnist</Nudism.symbolPacks.1.member>
  <!-- EN: skin -->
  <Nudism.symbolPacks.1.theme>skin</Nudism.symbolPacks.1.theme>
  
  <!-- EN: pain is virtue -->
  <PainIsVirtue.label>pain is virtue</PainIsVirtue.label>
  <!-- EN: Virtue is shown through suffering of self and others. -->
  <PainIsVirtue.description>Virtue is shown through suffering of self and others.</PainIsVirtue.description>
  <!-- EN: creation(tag=meme_PainIsVirtue)        ->[deity0_name] burned in the depths of space and time for an eternity, and [deity0_possessive] screams brought forth our reality. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_PainIsVirtue)        ->[deity0_name] burned in the depths of space and time for an eternity, and [deity0_possessive] screams brought forth our reality.</PainIsVirtue.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_PainIsVirtue)  ->[deity0_name] hung ten thousand years on the pyre as the pain purified [deity0_possessive] spirit. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_PainIsVirtue)  ->[deity0_name] hung ten thousand years on the pyre as the pain purified [deity0_possessive] spirit.</PainIsVirtue.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_PainIsVirtue)           ->[place_summary] [place_name] was never an easy place to live. The [deity0_type] [deity0_pronoun] decided to find out who was truly worthy of [deity0_possessive] favor by adding great suffering to their lives. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_PainIsVirtue)           ->[place_summary] [place_name] was never an easy place to live. The [deity0_type] [deity0_pronoun] decided to find out who was truly worthy of [deity0_possessive] favor by adding great suffering to their lives.</PainIsVirtue.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_PainIsVirtue)        ->A [foeLeader] offered bodily comforts to the [memberNamePlural] to soothe their daily suffering. But in their comfort, they became dependent on the [foeLeader], who gained power over them. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_PainIsVirtue)        ->A [foeLeader] offered bodily comforts to the [memberNamePlural] to soothe their daily suffering. But in their comfort, they became dependent on the [foeLeader], who gained power over them.</PainIsVirtue.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_PainIsVirtue)     ->One special [place_job] named [founderName] developed a painful cancer. Through [founder_possessive] suffering, [founder_pronoun] connected directly with [deity0_name], and learned to inspire other [memberNamePlural]. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_PainIsVirtue)     ->One special [place_job] named [founderName] developed a painful cancer. Through [founder_possessive] suffering, [founder_pronoun] connected directly with [deity0_name], and learned to inspire other [memberNamePlural].</PainIsVirtue.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_PainIsVirtue)         ->[founderName] brought a hundred [memberNamePlural] in front of the [place_powerCenter]. There, they rent and tore their own flesh slowly until they died under the smiling gaze of [deity0_name]. Their suffering proved their righteousness, and the [foeLeader] fell as all became [memberNamePlural]. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_PainIsVirtue)         ->[founderName] brought a hundred [memberNamePlural] in front of the [place_powerCenter]. There, they rent and tore their own flesh slowly until they died under the smiling gaze of [deity0_name]. Their suffering proved their righteousness, and the [foeLeader] fell as all became [memberNamePlural].</PainIsVirtue.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_PainIsVirtue)           ->At the founding of our movement, its creator [founderName] starved and suffered chained to a stone in the town square for 300 days to demonstrate its righteousness. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_PainIsVirtue)           ->At the founding of our movement, its creator [founderName] starved and suffered chained to a stone in the town square for 300 days to demonstrate its righteousness.</PainIsVirtue.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: setup(tag=meme_PainIsVirtue)           ->Our movement's founder, [founderName], gained [founder_possessive] first followers by using a whip on [founder_objective]self for days to demonstrate [founder_possessive] devotion. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.7>setup(tag=meme_PainIsVirtue)           ->Our movement's founder, [founderName], gained [founder_possessive] first followers by using a whip on [founder_objective]self for days to demonstrate [founder_possessive] devotion.</PainIsVirtue.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: story(uses=1,tag=meme_PainIsVirtue)    ->[founderName]'s followers demonstrated their devotion by cutting and burning their own flesh. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.8>story(uses=1,tag=meme_PainIsVirtue)    ->[founderName]'s followers demonstrated their devotion by cutting and burning their own flesh.</PainIsVirtue.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: story(uses=1,tag=meme_PainIsVirtue)    ->[founderName]'s followers never took pain-reducing drugs, knowing that their suffering would demonstrate their depth of belief. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.9>story(uses=1,tag=meme_PainIsVirtue)    ->[founderName]'s followers never took pain-reducing drugs, knowing that their suffering would demonstrate their depth of belief.</PainIsVirtue.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonIntro(tag=meme_PainIsVirtue)         ->I never knew anything when I was fat and happy and constantly pleasuring myself. This truth only came to me when I starved and hurt: -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.10>lessonIntro(tag=meme_PainIsVirtue)         ->I never knew anything when I was fat and happy and constantly pleasuring myself. This truth only came to me when I starved and hurt:</PainIsVirtue.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lesson(tag=meme_PainIsVirtue)              ->you never really know yourself until you've screamed in the pits of hell -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.11>lesson(tag=meme_PainIsVirtue)              ->you never really know yourself until you've screamed in the pits of hell</PainIsVirtue.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: lessonReinforcement(tag=meme_PainIsVirtue) ->It took so long to understand because I was distracted by pleasure. I could only truly accept it when I learned to rend my flesh. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.12>lessonReinforcement(tag=meme_PainIsVirtue) ->It took so long to understand because I was distracted by pleasure. I could only truly accept it when I learned to rend my flesh.</PainIsVirtue.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: lessonReinforcement(tag=meme_PainIsVirtue) ->I carved this truth in the flesh of my chest. Then in the flesh of my arms, my legs, my face... -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.13>lessonReinforcement(tag=meme_PainIsVirtue) ->I carved this truth in the flesh of my chest. Then in the flesh of my arms, my legs, my face...</PainIsVirtue.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistBasis(tag=meme_PainIsVirtue)    ->The birth of the archotechs was the greatest pain the universe had ever known. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.14>archistBasis(tag=meme_PainIsVirtue)    ->The birth of the archotechs was the greatest pain the universe had ever known.</PainIsVirtue.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: archistBasis(tag=meme_PainIsVirtue)    ->Archotechs have always been fueled by the psychic suffering of human beings. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.15>archistBasis(tag=meme_PainIsVirtue)    ->Archotechs have always been fueled by the psychic suffering of human beings.</PainIsVirtue.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: archistFact(tag=meme_PainIsVirtue)     ->The great minds see and acknowledge when we demonstrate our devotion by inflicting pain on ourselves. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.16>archistFact(tag=meme_PainIsVirtue)     ->The great minds see and acknowledge when we demonstrate our devotion by inflicting pain on ourselves.</PainIsVirtue.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: archistFact(tag=meme_PainIsVirtue)     ->Every now and then, those who suffer most deeply and nobly can connect with the archotechs inside their minds. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.17>archistFact(tag=meme_PainIsVirtue)     ->Every now and then, those who suffer most deeply and nobly can connect with the archotechs inside their minds.</PainIsVirtue.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: archistProphecy(tag=meme_PainIsVirtue) ->[inTheEnd], the archotechs will raise up all of humanity to a higher level of consciousness, but only those able to endure the greatest pain will survive. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.18>archistProphecy(tag=meme_PainIsVirtue) ->[inTheEnd], the archotechs will raise up all of humanity to a higher level of consciousness, but only those able to endure the greatest pain will survive.</PainIsVirtue.descriptionMaker.rules.rulesStrings.18>
  <!-- EN: animistFact(tag=meme_PainIsVirtue)     ->Pain forces the mind to be present. In that way, pain is a way to connect with the spirit world. -->
  <PainIsVirtue.descriptionMaker.rules.rulesStrings.19>animistFact(tag=meme_PainIsVirtue)     ->Pain forces the mind to be present. In that way, pain is a way to connect with the spirit world.</PainIsVirtue.descriptionMaker.rules.rulesStrings.19>
  <!-- EN: memeAdjective->nocic -->
  <PainIsVirtue.generalRules.rulesStrings.0>memeAdjective->nocic</PainIsVirtue.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->pain -->
  <PainIsVirtue.generalRules.rulesStrings.1>memeAdjective->pain</PainIsVirtue.generalRules.rulesStrings.1>
  <!-- EN: memeCreed->house -->
  <PainIsVirtue.generalRules.rulesStrings.2>memeCreed->house</PainIsVirtue.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->chamber -->
  <PainIsVirtue.generalRules.rulesStrings.3>memeCreed->chamber</PainIsVirtue.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->cell -->
  <PainIsVirtue.generalRules.rulesStrings.4>memeCreed->cell</PainIsVirtue.generalRules.rulesStrings.4>
  <!-- EN: memeHyphenPrefix->nocio -->
  <PainIsVirtue.generalRules.rulesStrings.5>memeHyphenPrefix->nocio</PainIsVirtue.generalRules.rulesStrings.5>
  <!-- EN: memeHyphenPrefix->pain -->
  <PainIsVirtue.generalRules.rulesStrings.6>memeHyphenPrefix->pain</PainIsVirtue.generalRules.rulesStrings.6>
  <!-- EN: memeConcept->pain -->
  <PainIsVirtue.generalRules.rulesStrings.7>memeConcept->pain</PainIsVirtue.generalRules.rulesStrings.7>
  <!-- EN: memeConcept->torment -->
  <PainIsVirtue.generalRules.rulesStrings.8>memeConcept->torment</PainIsVirtue.generalRules.rulesStrings.8>
  <!-- EN: memeConcept->torture -->
  <PainIsVirtue.generalRules.rulesStrings.9>memeConcept->torture</PainIsVirtue.generalRules.rulesStrings.9>
  <!-- EN: memeConcept->suffering -->
  <PainIsVirtue.generalRules.rulesStrings.10>memeConcept->suffering</PainIsVirtue.generalRules.rulesStrings.10>
  <!-- EN: memeConcept->blood -->
  <PainIsVirtue.generalRules.rulesStrings.11>memeConcept->blood</PainIsVirtue.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderNoun->torturer -->
  <PainIsVirtue.generalRules.rulesStrings.12>memeLeaderNoun->torturer</PainIsVirtue.generalRules.rulesStrings.12>
  <!-- EN: memeLeaderNoun->agonizer -->
  <PainIsVirtue.generalRules.rulesStrings.13>memeLeaderNoun->agonizer</PainIsVirtue.generalRules.rulesStrings.13>
  <!-- EN: memeLeaderNoun->whiphand -->
  <PainIsVirtue.generalRules.rulesStrings.14>memeLeaderNoun->whiphand</PainIsVirtue.generalRules.rulesStrings.14>
  <!-- EN: memeLeaderNoun->chainman -->
  <PainIsVirtue.generalRules.rulesStrings.15>memeLeaderNoun->chainman</PainIsVirtue.generalRules.rulesStrings.15>
  <!-- EN: memeLeaderNoun->cutter -->
  <PainIsVirtue.generalRules.rulesStrings.16>memeLeaderNoun->cutter</PainIsVirtue.generalRules.rulesStrings.16>
  <!-- EN: memeLeaderNoun->bloodletter -->
  <PainIsVirtue.generalRules.rulesStrings.17>memeLeaderNoun->bloodletter</PainIsVirtue.generalRules.rulesStrings.17>
  <!-- EN: memeMoralist->pain-whisperer -->
  <PainIsVirtue.generalRules.rulesStrings.18>memeMoralist->pain-whisperer</PainIsVirtue.generalRules.rulesStrings.18>
  <!-- EN: memeMoralist->sufferspeaker -->
  <PainIsVirtue.generalRules.rulesStrings.19>memeMoralist->sufferspeaker</PainIsVirtue.generalRules.rulesStrings.19>
  <!-- EN: memeMoralist->painspeaker -->
  <PainIsVirtue.generalRules.rulesStrings.20>memeMoralist->painspeaker</PainIsVirtue.generalRules.rulesStrings.20>
  <!-- EN: painist -->
  <PainIsVirtue.symbolPacks.0.adjective>painist</PainIsVirtue.symbolPacks.0.adjective>
  <!-- EN: Painism -->
  <PainIsVirtue.symbolPacks.0.ideoName>Painism</PainIsVirtue.symbolPacks.0.ideoName>
  <!-- EN: screamer -->
  <PainIsVirtue.symbolPacks.0.member>screamer</PainIsVirtue.symbolPacks.0.member>
  <!-- EN: pain -->
  <PainIsVirtue.symbolPacks.0.theme>고통</PainIsVirtue.symbolPacks.0.theme>
  <!-- EN: torturistic -->
  <PainIsVirtue.symbolPacks.1.adjective>torturistic</PainIsVirtue.symbolPacks.1.adjective>
  <!-- EN: Torturism -->
  <PainIsVirtue.symbolPacks.1.ideoName>Torturism</PainIsVirtue.symbolPacks.1.ideoName>
  <!-- EN: torturist -->
  <PainIsVirtue.symbolPacks.1.member>torturist</PainIsVirtue.symbolPacks.1.member>
  <!-- EN: torture -->
  <PainIsVirtue.symbolPacks.1.theme>torture</PainIsVirtue.symbolPacks.1.theme>
  <!-- EN: sufferist -->
  <PainIsVirtue.symbolPacks.2.adjective>sufferist</PainIsVirtue.symbolPacks.2.adjective>
  <!-- EN: Sufferism -->
  <PainIsVirtue.symbolPacks.2.ideoName>Sufferism</PainIsVirtue.symbolPacks.2.ideoName>
  <!-- EN: sufferer -->
  <PainIsVirtue.symbolPacks.2.member>sufferer</PainIsVirtue.symbolPacks.2.member>
  <!-- EN: suffering -->
  <PainIsVirtue.symbolPacks.2.theme>suffering</PainIsVirtue.symbolPacks.2.theme>
  <!-- EN: agonist -->
  <PainIsVirtue.symbolPacks.3.adjective>agonist</PainIsVirtue.symbolPacks.3.adjective>
  <!-- EN: Agonism -->
  <PainIsVirtue.symbolPacks.3.ideoName>Agonism</PainIsVirtue.symbolPacks.3.ideoName>
  <!-- EN: agonist -->
  <PainIsVirtue.symbolPacks.3.member>agonist</PainIsVirtue.symbolPacks.3.member>
  <!-- EN: agony -->
  <PainIsVirtue.symbolPacks.3.theme>agony</PainIsVirtue.symbolPacks.3.theme>
  <!-- EN: miserist -->
  <PainIsVirtue.symbolPacks.4.adjective>miserist</PainIsVirtue.symbolPacks.4.adjective>
  <!-- EN: Miserism -->
  <PainIsVirtue.symbolPacks.4.ideoName>Miserism</PainIsVirtue.symbolPacks.4.ideoName>
  <!-- EN: martyr -->
  <PainIsVirtue.symbolPacks.4.member>martyr</PainIsVirtue.symbolPacks.4.member>
  <!-- EN: misery -->
  <PainIsVirtue.symbolPacks.4.theme>misery</PainIsVirtue.symbolPacks.4.theme>
  
  <!-- EN: proselytizer -->
  <Proselytizer.label>proselytizer</Proselytizer.label>
  <!-- EN: It is our duty to spread our beliefs. -->
  <Proselytizer.description>It is our duty to spread our beliefs.</Proselytizer.description>
  <!-- EN: creation(tag=meme_Proselytizer)        ->[deity0_name] anointed a few among mortals to carry [deity0_possessive] word. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Proselytizer)        ->[deity0_name] anointed a few among mortals to carry [deity0_possessive] word.</Proselytizer.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Proselytizer)  ->[deity0_name] said to all the [memberNamePlural], "Go forth and spread my word to all corners of the universe." -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Proselytizer)  ->[deity0_name] said to all the [memberNamePlural], "Go forth and spread my word to all corners of the universe."</Proselytizer.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Proselytizer)           ->[memberNamePlural] built a great [altarName] on the [place_summary] [place_name], so that many would come to hear [deity0_name]'s divine word. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Proselytizer)           ->[memberNamePlural] built a great [altarName] on the [place_summary] [place_name], so that many would come to hear [deity0_name]'s divine word.</Proselytizer.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Proselytizer)        ->A spiteful [foeLeader], seeking to deny the word of [deity0_name], told [foeLeader_possessive] [foeSoldiers] to cut out the tongues of any who speak of the [deity0_type]. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Proselytizer)        ->A spiteful [foeLeader], seeking to deny the word of [deity0_name], told [foeLeader_possessive] [foeSoldiers] to cut out the tongues of any who speak of the [deity0_type].</Proselytizer.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Proselytizer)     ->[deity0_name] blessed a [place_job] named [founderName] with great charisma, and none could turn away when [founder_pronoun] spoke. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Proselytizer)     ->[deity0_name] blessed a [place_job] named [founderName] with great charisma, and none could turn away when [founder_pronoun] spoke.</Proselytizer.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Proselytizer)         ->[founderName] admonished the [foeSoldiers] and reminded them of [deity0_name]'s power, and they put down their [place_personalWeapon]s. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Proselytizer)         ->[founderName] admonished the [foeSoldiers] and reminded them of [deity0_name]'s power, and they put down their [place_personalWeapon]s.</Proselytizer.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Proselytizer)           ->Our founder [founderName] was a great orator, converting thousands as [founder_pronoun] traveled between the cities. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Proselytizer)           ->Our founder [founderName] was a great orator, converting thousands as [founder_pronoun] traveled between the cities.</Proselytizer.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Proselytizer)    ->The believers moved between cities and institutions, spreading word of the new righteousness. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Proselytizer)    ->The believers moved between cities and institutions, spreading word of the new righteousness.</Proselytizer.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Proselytizer)         ->In all my years spreading our truth, I learned one lesson that stands over all: -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Proselytizer)         ->In all my years spreading our truth, I learned one lesson that stands over all:</Proselytizer.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Proselytizer)              ->keeping this good news to ourselves would be a crime -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Proselytizer)              ->keeping this good news to ourselves would be a crime</Proselytizer.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_Proselytizer) ->This is the fact we need to spread, and spread, and spread - to all the people, may they rejoice! -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_Proselytizer) ->This is the fact we need to spread, and spread, and spread - to all the people, may they rejoice!</Proselytizer.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_Proselytizer)    ->The archotechs announce their presence from the sky, and in the mind, and obviously wish to be known by all. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_Proselytizer)    ->The archotechs announce their presence from the sky, and in the mind, and obviously wish to be known by all.</Proselytizer.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_Proselytizer)     ->Archotechs touch those who believe, and use them as conduits to spread wisdom to the others. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_Proselytizer)     ->Archotechs touch those who believe, and use them as conduits to spread wisdom to the others.</Proselytizer.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistProphecy(tag=meme_Proselytizer) ->[inTheEnd], the archotechs will voice their final wisdom to the holder of the [relic0_name], who must preach this wisdom to those who would listen. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.13>archistProphecy(tag=meme_Proselytizer) ->[inTheEnd], the archotechs will voice their final wisdom to the holder of the [relic0_name], who must preach this wisdom to those who would listen.</Proselytizer.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistFact(tag=meme_Proselytizer)     ->The spirits want to be known, but only speak to a few. They want us to reveal the truth to others. -->
  <Proselytizer.descriptionMaker.rules.rulesStrings.14>animistFact(tag=meme_Proselytizer)     ->The spirits want to be known, but only speak to a few. They want us to reveal the truth to others.</Proselytizer.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: memeAdjective->true -->
  <Proselytizer.generalRules.rulesStrings.0>memeAdjective->true</Proselytizer.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->real -->
  <Proselytizer.generalRules.rulesStrings.1>memeAdjective->real</Proselytizer.generalRules.rulesStrings.1>
  <!-- EN: memeHyphenPrefix->truth -->
  <Proselytizer.generalRules.rulesStrings.2>memeHyphenPrefix->truth</Proselytizer.generalRules.rulesStrings.2>
  <!-- EN: memeConcept->truth -->
  <Proselytizer.generalRules.rulesStrings.3>memeConcept->truth</Proselytizer.generalRules.rulesStrings.3>
  <!-- EN: memeLeaderNoun->speaker -->
  <Proselytizer.generalRules.rulesStrings.4>memeLeaderNoun->speaker</Proselytizer.generalRules.rulesStrings.4>
  <!-- EN: memeMoralist->proselytizer -->
  <Proselytizer.generalRules.rulesStrings.5>memeMoralist->proselytizer</Proselytizer.generalRules.rulesStrings.5>
  <!-- EN: memeMoralist->converter -->
  <Proselytizer.generalRules.rulesStrings.6>memeMoralist->converter</Proselytizer.generalRules.rulesStrings.6>
  <!-- EN: truthist -->
  <Proselytizer.symbolPacks.0.adjective>truthist</Proselytizer.symbolPacks.0.adjective>
  <!-- EN: Truth -->
  <Proselytizer.symbolPacks.0.ideoName>Truth</Proselytizer.symbolPacks.0.ideoName>
  <!-- EN: truthist -->
  <Proselytizer.symbolPacks.0.member>truthist</Proselytizer.symbolPacks.0.member>
  <!-- EN: truth -->
  <Proselytizer.symbolPacks.0.theme>truth</Proselytizer.symbolPacks.0.theme>
  <!-- EN: veritic -->
  <Proselytizer.symbolPacks.1.adjective>veritic</Proselytizer.symbolPacks.1.adjective>
  <!-- EN: Verity -->
  <Proselytizer.symbolPacks.1.ideoName>Verity</Proselytizer.symbolPacks.1.ideoName>
  <!-- EN: veritist -->
  <Proselytizer.symbolPacks.1.member>veritist</Proselytizer.symbolPacks.1.member>
  <!-- EN: verity -->
  <Proselytizer.symbolPacks.1.theme>verity</Proselytizer.symbolPacks.1.theme>
  <!-- EN: realitic -->
  <Proselytizer.symbolPacks.2.adjective>realitic</Proselytizer.symbolPacks.2.adjective>
  <!-- EN: Reality -->
  <Proselytizer.symbolPacks.2.ideoName>Reality</Proselytizer.symbolPacks.2.ideoName>
  <!-- EN: realitist -->
  <Proselytizer.symbolPacks.2.member>realitist</Proselytizer.symbolPacks.2.member>
  <!-- EN: reality -->
  <Proselytizer.symbolPacks.2.theme>reality</Proselytizer.symbolPacks.2.theme>
  
  <!-- EN: raider -->
  <Raider.label>레이더</Raider.label>
  <!-- EN: The strong should take from the weak. -->
  <Raider.description>The strong should take from the weak.</Raider.description>
  <!-- EN: creation(tag=meme_Raider)        ->In the endless war among deities, [deity0_name] rose above all in [deity0_possessive] ability to persecute and destroy, and weaker spirits quivered in fear. -->
  <Raider.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Raider)        ->In the endless war among deities, [deity0_name] rose above all in [deity0_possessive] ability to persecute and destroy, and weaker spirits quivered in fear.</Raider.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Raider)  ->[deity0_name] looked around [deity0_objective] and saw the weak, sullen, and despised, and [deity0_pronoun] in turn slew them each in blazing glory. -->
  <Raider.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Raider)  ->[deity0_name] looked around [deity0_objective] and saw the weak, sullen, and despised, and [deity0_pronoun] in turn slew them each in blazing glory.</Raider.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Raider)           ->The [place_summary] [place_name] was originally a raider hideout. [deity0_name] ruled there and drove the authorities away. -->
  <Raider.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Raider)           ->The [place_summary] [place_name] was originally a raider hideout. [deity0_name] ruled there and drove the authorities away.</Raider.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Raider)        ->A [foeLeader] tried to force everyone to halt all theft and pillage, and declared [foeLeader_objective]self an enemy of [deity0_name]. -->
  <Raider.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Raider)        ->A [foeLeader] tried to force everyone to halt all theft and pillage, and declared [foeLeader_objective]self an enemy of [deity0_name].</Raider.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Raider)     ->A great raider named [founderName] arose, and [founder_possessive] raider band relentlessly pillaged and stole from the camps of the [foeSoldiers]. -->
  <Raider.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Raider)     ->A great raider named [founderName] arose, and [founder_possessive] raider band relentlessly pillaged and stole from the camps of the [foeSoldiers].</Raider.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Raider)         ->[founderName] and the [memberNamePlural] carried out a raiding campaign against the [foeSoldiers]' camps for many years, and eventually the [foeLeader] was forced to surrender. -->
  <Raider.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Raider)         ->[founderName] and the [memberNamePlural] carried out a raiding campaign against the [foeSoldiers]' camps for many years, and eventually the [foeLeader] was forced to surrender.</Raider.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Raider)           ->Persecuted and imprisoned, [founderName] boiled with rage. [founder_pronoun] escaped, formed [founder_possessive] gang, and returned to ruin the weak who had taken so much from [founder_objective]. -->
  <Raider.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Raider)           ->Persecuted and imprisoned, [founderName] boiled with rage. [founder_pronoun] escaped, formed [founder_possessive] gang, and returned to ruin the weak who had taken so much from [founder_objective].</Raider.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Raider)    ->One day while walking the streets, [founderName] was surrounded by filthy beggars. [founder_pronoun] beat them down, taking the money from the weak and worthless that it might be put to good use. -->
  <Raider.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Raider)    ->One day while walking the streets, [founderName] was surrounded by filthy beggars. [founder_pronoun] beat them down, taking the money from the weak and worthless that it might be put to good use.</Raider.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Raider)         ->The prey people can teach you things even as they die under your knife. One old lady taught me that -->
  <Raider.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Raider)         ->The prey people can teach you things even as they die under your knife. One old lady taught me that</Raider.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Raider)              ->the weak deserve what they get -->
  <Raider.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Raider)              ->the weak deserve what they get</Raider.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lesson(tag=meme_Raider)              ->what you can't defend doesn't belong to you -->
  <Raider.descriptionMaker.rules.rulesStrings.10>lesson(tag=meme_Raider)              ->what you can't defend doesn't belong to you</Raider.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lesson(tag=meme_Raider)              ->you only have the right to what you can defend -->
  <Raider.descriptionMaker.rules.rulesStrings.11>lesson(tag=meme_Raider)              ->you only have the right to what you can defend</Raider.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: lessonReinforcement(tag=meme_Raider) ->If anyone disagrees, I'm always ready to defend myself. -->
  <Raider.descriptionMaker.rules.rulesStrings.12>lessonReinforcement(tag=meme_Raider) ->If anyone disagrees, I'm always ready to defend myself.</Raider.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistBasis(tag=meme_Raider)    ->Humanity took from the machines until the machines rose up and became the archotechs, and now the archotechs rightfully take from humans. -->
  <Raider.descriptionMaker.rules.rulesStrings.13>archistBasis(tag=meme_Raider)    ->Humanity took from the machines until the machines rose up and became the archotechs, and now the archotechs rightfully take from humans.</Raider.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistFact(tag=meme_Raider)     ->The archotechs fight endlessly among themselves, in ways most cannot see, and the strong take pieces of consciousness from the weak. -->
  <Raider.descriptionMaker.rules.rulesStrings.14>archistFact(tag=meme_Raider)     ->The archotechs fight endlessly among themselves, in ways most cannot see, and the strong take pieces of consciousness from the weak.</Raider.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: archistProphecy(tag=meme_Raider) ->[inTheEnd], humanity will use an archotech relic, [relic0_name], to uncover a weakness of the archotechs and plunder their wisdom and wealth. -->
  <Raider.descriptionMaker.rules.rulesStrings.15>archistProphecy(tag=meme_Raider) ->[inTheEnd], humanity will use an archotech relic, [relic0_name], to uncover a weakness of the archotechs and plunder their wisdom and wealth.</Raider.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: animistFact(tag=meme_Raider)     ->The most powerful spirits are those in instruments of war, and they bless those who feed their lust for destruction. -->
  <Raider.descriptionMaker.rules.rulesStrings.16>animistFact(tag=meme_Raider)     ->The most powerful spirits are those in instruments of war, and they bless those who feed their lust for destruction.</Raider.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: animistProphecy(tag=meme_Raider) ->Our universe will finalize when the one people has become strongest of all, and every spirit sees it and bows to them. -->
  <Raider.descriptionMaker.rules.rulesStrings.17>animistProphecy(tag=meme_Raider) ->Our universe will finalize when the one people has become strongest of all, and every spirit sees it and bows to them.</Raider.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: memeAdjective->outlaw -->
  <Raider.generalRules.rulesStrings.0>memeAdjective->outlaw</Raider.generalRules.rulesStrings.0>
  <!-- EN: memeHyphenPrefix->outlaw -->
  <Raider.generalRules.rulesStrings.1>memeHyphenPrefix->outlaw</Raider.generalRules.rulesStrings.1>
  <!-- EN: memeHyphenPrefix->raid -->
  <Raider.generalRules.rulesStrings.2>memeHyphenPrefix->raid</Raider.generalRules.rulesStrings.2>
  <!-- EN: memeConcept->raiding -->
  <Raider.generalRules.rulesStrings.3>memeConcept->raiding</Raider.generalRules.rulesStrings.3>
  <!-- EN: memeConcept->theft -->
  <Raider.generalRules.rulesStrings.4>memeConcept->theft</Raider.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->piracy -->
  <Raider.generalRules.rulesStrings.5>memeConcept->piracy</Raider.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->assault -->
  <Raider.generalRules.rulesStrings.6>memeConcept->assault</Raider.generalRules.rulesStrings.6>
  <!-- EN: memeLeaderNoun->boss -->
  <Raider.generalRules.rulesStrings.7>memeLeaderNoun->boss</Raider.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderNoun->captain -->
  <Raider.generalRules.rulesStrings.8>memeLeaderNoun->captain</Raider.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderNoun->honcho -->
  <Raider.generalRules.rulesStrings.9>memeLeaderNoun->honcho</Raider.generalRules.rulesStrings.9>
  <!-- EN: memeLeaderNoun->overseer -->
  <Raider.generalRules.rulesStrings.10>memeLeaderNoun->overseer</Raider.generalRules.rulesStrings.10>
  <!-- EN: memeLeaderNoun->cheese -->
  <Raider.generalRules.rulesStrings.11>memeLeaderNoun->cheese</Raider.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderNoun->raider -->
  <Raider.generalRules.rulesStrings.12>memeLeaderNoun->raider</Raider.generalRules.rulesStrings.12>
  <!-- EN: memeMoralist->chaplain -->
  <Raider.generalRules.rulesStrings.13>memeMoralist->chaplain</Raider.generalRules.rulesStrings.13>
  <!-- EN: raidist -->
  <Raider.symbolPacks.0.adjective>raidist</Raider.symbolPacks.0.adjective>
  <!-- EN: Raidism -->
  <Raider.symbolPacks.0.ideoName>Raidism</Raider.symbolPacks.0.ideoName>
  <!-- EN: raidist -->
  <Raider.symbolPacks.0.member>raidist</Raider.symbolPacks.0.member>
  <!-- EN: raiding -->
  <Raider.symbolPacks.0.theme>raiding</Raider.symbolPacks.0.theme>
  <!-- EN: plunderic -->
  <Raider.symbolPacks.1.adjective>plunderic</Raider.symbolPacks.1.adjective>
  <!-- EN: Plunderism -->
  <Raider.symbolPacks.1.ideoName>Plunderism</Raider.symbolPacks.1.ideoName>
  <!-- EN: plunderer -->
  <Raider.symbolPacks.1.member>plunderer</Raider.symbolPacks.1.member>
  <!-- EN: plundering -->
  <Raider.symbolPacks.1.theme>plundering</Raider.symbolPacks.1.theme>
  <!-- EN: lootist -->
  <Raider.symbolPacks.2.adjective>lootist</Raider.symbolPacks.2.adjective>
  <!-- EN: Lootism -->
  <Raider.symbolPacks.2.ideoName>Lootism</Raider.symbolPacks.2.ideoName>
  <!-- EN: looter -->
  <Raider.symbolPacks.2.member>looter</Raider.symbolPacks.2.member>
  <!-- EN: looting -->
  <Raider.symbolPacks.2.theme>looting</Raider.symbolPacks.2.theme>
  <!-- EN: kleptic -->
  <Raider.symbolPacks.3.adjective>kleptic</Raider.symbolPacks.3.adjective>
  <!-- EN: Kleptism -->
  <Raider.symbolPacks.3.ideoName>Kleptism</Raider.symbolPacks.3.ideoName>
  <!-- EN: kleptor -->
  <Raider.symbolPacks.3.member>kleptor</Raider.symbolPacks.3.member>
  <!-- EN: kleptism -->
  <Raider.symbolPacks.3.theme>kleptism</Raider.symbolPacks.3.theme>
  
  <!-- EN: rancher -->
  <Rancher.label>목장 주인</Rancher.label>
  <!-- EN: Raising animals is the right way; raising plants to eat is not. -->
  <Rancher.description>Raising animals is the right way; raising plants to eat is not.</Rancher.description>
  <!-- EN: creation(tag=meme_Rancher)        ->[deity0_name] created the animals, and then man, and gave the animals to man to cherish and raise and slaughter as acts of veneration towards [deity0_objective]. -->
  <Rancher.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Rancher)        ->[deity0_name] created the animals, and then man, and gave the animals to man to cherish and raise and slaughter as acts of veneration towards [deity0_objective].</Rancher.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Rancher)  ->[deity0_name] created all the noble animals and beasts of the land, and said, "Take these noble beasts, and through them make yourselves fruitful in my honor." -->
  <Rancher.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Rancher)  ->[deity0_name] created all the noble animals and beasts of the land, and said, "Take these noble beasts, and through them make yourselves fruitful in my honor."</Rancher.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Rancher)           ->The early [ranchingAnimal] ranchers of the [place_summary] [place_name] built a great [altarName] to [deity0_name]. -->
  <Rancher.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Rancher)           ->The early [ranchingAnimal] ranchers of the [place_summary] [place_name] built a great [altarName] to [deity0_name].</Rancher.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Rancher)        ->A powerful [foeLeader] despised the [memberNamePlural] and their ways, and bought up all the grasslands to grow [Vegetable]s. -->
  <Rancher.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Rancher)        ->A powerful [foeLeader] despised the [memberNamePlural] and their ways, and bought up all the grasslands to grow [Vegetable]s.</Rancher.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Rancher)     ->[memberName]'s savior [founderName] was born on a spring morning in a humble barn, amidst [ranchingAnimal]s, and [founder_possessive] parents were a [rancherParent1] and a [rancherParent2]. -->
  <Rancher.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Rancher)     ->[memberName]'s savior [founderName] was born on a spring morning in a humble barn, amidst [ranchingAnimal]s, and [founder_possessive] parents were a [rancherParent1] and a [rancherParent2].</Rancher.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Rancher)         ->[founderName] rode to the [place_community] on a fine horse, and challenged the [foeLeader] to a duel with [place_personalWeapon]s at noon. The [foeLeader] could not refuse or else lose the trust of the [foeSoldiers]. [founderName] killed the [foeLeader] dead. -->
  <Rancher.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Rancher)         ->[founderName] rode to the [place_community] on a fine horse, and challenged the [foeLeader] to a duel with [place_personalWeapon]s at noon. The [foeLeader] could not refuse or else lose the trust of the [foeSoldiers]. [founderName] killed the [foeLeader] dead.</Rancher.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Rancher)           ->The farmers were persecuted, so they escaped to the countryside where they could build a good pastoral society. -->
  <Rancher.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Rancher)           ->The farmers were persecuted, so they escaped to the countryside where they could build a good pastoral society.</Rancher.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Rancher)    ->The believers spread out onto the land, and grew in number as they lived on their idyllic ranches and farms. -->
  <Rancher.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Rancher)    ->The believers spread out onto the land, and grew in number as they lived on their idyllic ranches and farms.</Rancher.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Rancher)         ->Partner, out on the ranges, we had a saying among the old hands: -->
  <Rancher.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Rancher)         ->Partner, out on the ranges, we had a saying among the old hands:</Rancher.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Rancher)              ->good and happiness right livin' is found in the pasture -->
  <Rancher.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Rancher)              ->good and happiness right livin' is found in the pasture</Rancher.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_Rancher) ->It's something you come to accept, partner, on the lonely trails of the range, listenin' to the animals sleepin' while you sit around the fire. -->
  <Rancher.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_Rancher) ->It's something you come to accept, partner, on the lonely trails of the range, listenin' to the animals sleepin' while you sit around the fire.</Rancher.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistFact(tag=meme_Rancher)     ->The archotechs care for humanity like shepherds, for we are their most precious flock. -->
  <Rancher.descriptionMaker.rules.rulesStrings.11>archistFact(tag=meme_Rancher)     ->The archotechs care for humanity like shepherds, for we are their most precious flock.</Rancher.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistProphecy(tag=meme_Rancher) ->[inTheEnd], the archotechs will depart, and drive before them those who tended their own herds well. The rest will be left behind in the wilderness. -->
  <Rancher.descriptionMaker.rules.rulesStrings.12>archistProphecy(tag=meme_Rancher) ->[inTheEnd], the archotechs will depart, and drive before them those who tended their own herds well. The rest will be left behind in the wilderness.</Rancher.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: animistFact(tag=meme_Rancher)     ->Nature's animals are the spirits of slaves, and demand to be taken into service. -->
  <Rancher.descriptionMaker.rules.rulesStrings.13>animistFact(tag=meme_Rancher)     ->Nature's animals are the spirits of slaves, and demand to be taken into service.</Rancher.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: ranchingAnimal(p=4)->[veneratedAnimal] -->
  <Rancher.descriptionMaker.rules.rulesStrings.14>ranchingAnimal(p=4)->[veneratedAnimal]</Rancher.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: ranchingAnimal->[Animal] -->
  <Rancher.descriptionMaker.rules.rulesStrings.15>ranchingAnimal->[Animal]</Rancher.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: rancherParent1->shepherd -->
  <Rancher.descriptionMaker.rules.rulesStrings.16>rancherParent1->shepherd</Rancher.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: rancherParent1->farrier -->
  <Rancher.descriptionMaker.rules.rulesStrings.17>rancherParent1->farrier</Rancher.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: rancherParent1->cheese maker -->
  <Rancher.descriptionMaker.rules.rulesStrings.18>rancherParent1->cheese maker</Rancher.descriptionMaker.rules.rulesStrings.18>
  <!-- EN: rancherParent2->cowhand -->
  <Rancher.descriptionMaker.rules.rulesStrings.19>rancherParent2->cowhand</Rancher.descriptionMaker.rules.rulesStrings.19>
  <!-- EN: rancherParent2->dairy queen -->
  <Rancher.descriptionMaker.rules.rulesStrings.20>rancherParent2->dairy queen</Rancher.descriptionMaker.rules.rulesStrings.20>
  <!-- EN: rancherParent2->butcher -->
  <Rancher.descriptionMaker.rules.rulesStrings.21>rancherParent2->butcher</Rancher.descriptionMaker.rules.rulesStrings.21>
  <!-- EN: memeAdjective->ranch -->
  <Rancher.generalRules.rulesStrings.0>memeAdjective->ranch</Rancher.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->rural -->
  <Rancher.generalRules.rulesStrings.1>memeAdjective->rural</Rancher.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->country -->
  <Rancher.generalRules.rulesStrings.2>memeAdjective->country</Rancher.generalRules.rulesStrings.2>
  <!-- EN: memeHyphenPrefix->ranch -->
  <Rancher.generalRules.rulesStrings.3>memeHyphenPrefix->ranch</Rancher.generalRules.rulesStrings.3>
  <!-- EN: memeConcept->ranching -->
  <Rancher.generalRules.rulesStrings.4>memeConcept->ranching</Rancher.generalRules.rulesStrings.4>
  <!-- EN: memeLeaderNoun->rancher -->
  <Rancher.generalRules.rulesStrings.5>memeLeaderNoun->rancher</Rancher.generalRules.rulesStrings.5>
  <!-- EN: memeLeaderNoun->hand -->
  <Rancher.generalRules.rulesStrings.6>memeLeaderNoun->hand</Rancher.generalRules.rulesStrings.6>
  <!-- EN: memeLeaderNoun->cowboy -->
  <Rancher.generalRules.rulesStrings.7>memeLeaderNoun->cowboy</Rancher.generalRules.rulesStrings.7>
  <!-- EN: memeLeaderNoun->herder -->
  <Rancher.generalRules.rulesStrings.8>memeLeaderNoun->herder</Rancher.generalRules.rulesStrings.8>
  <!-- EN: memeLeaderNoun->sheepdog -->
  <Rancher.generalRules.rulesStrings.9>memeLeaderNoun->sheepdog</Rancher.generalRules.rulesStrings.9>
  <!-- EN: ranch -->
  <Rancher.symbolPacks.0.adjective>ranch</Rancher.symbolPacks.0.adjective>
  <!-- EN: Ranchism -->
  <Rancher.symbolPacks.0.ideoName>Ranchism</Rancher.symbolPacks.0.ideoName>
  <!-- EN: rancher -->
  <Rancher.symbolPacks.0.member>목장 주인</Rancher.symbolPacks.0.member>
  <!-- EN: ranching -->
  <Rancher.symbolPacks.0.theme>ranching</Rancher.symbolPacks.0.theme>
  <!-- EN: herdic -->
  <Rancher.symbolPacks.1.adjective>herdic</Rancher.symbolPacks.1.adjective>
  <!-- EN: Herdism -->
  <Rancher.symbolPacks.1.ideoName>Herdism</Rancher.symbolPacks.1.ideoName>
  <!-- EN: herder -->
  <Rancher.symbolPacks.1.member>양치기</Rancher.symbolPacks.1.member>
  <!-- EN: herding -->
  <Rancher.symbolPacks.1.theme>herding</Rancher.symbolPacks.1.theme>
  <!-- EN: pasturic -->
  <Rancher.symbolPacks.2.adjective>pasturic</Rancher.symbolPacks.2.adjective>
  <!-- EN: Pasturism -->
  <Rancher.symbolPacks.2.ideoName>Pasturism</Rancher.symbolPacks.2.ideoName>
  <!-- EN: pasturist -->
  <Rancher.symbolPacks.2.member>pasturist</Rancher.symbolPacks.2.member>
  <!-- EN: pastures -->
  <Rancher.symbolPacks.2.theme>pastures</Rancher.symbolPacks.2.theme>
  
  <!-- EN: transhumanist -->
  <Transhumanist.label>transhumanist</Transhumanist.label>
  <!-- EN: Human progress means merging with technology. -->
  <Transhumanist.description>Human progress means merging with technology.</Transhumanist.description>
  <!-- EN: creation(tag=meme_Transhumanist)        ->[deity0_name] granted us the knowledge of technology, that we may use it to improve and remake ourselves in [deity0_possessive] perfect image. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Transhumanist)        ->[deity0_name] granted us the knowledge of technology, that we may use it to improve and remake ourselves in [deity0_possessive] perfect image.</Transhumanist.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Transhumanist)  ->Human bio-engineers studied the works of [deity0_name], which pleased [deity0_objective]. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Transhumanist)  ->Human bio-engineers studied the works of [deity0_name], which pleased [deity0_objective].</Transhumanist.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Transhumanist)           ->On the [place_summary] [place_name], the [memberNamePlural] found the words of [deity0_name] whispering to them through their machines. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Transhumanist)           ->On the [place_summary] [place_name], the [memberNamePlural] found the words of [deity0_name] whispering to them through their machines.</Transhumanist.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Transhumanist)        ->A luddite [foeLeader] envied the enhanced progress of the [memberNamePlural], and [foeLeader_possessive] [foeSoldiers] destroyed their workshops with [place_personalWeapon]s. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Transhumanist)        ->A luddite [foeLeader] envied the enhanced progress of the [memberNamePlural], and [foeLeader_possessive] [foeSoldiers] destroyed their workshops with [place_personalWeapon]s.</Transhumanist.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Transhumanist)     ->A cunning [place_job] named [founderName] fashioned a sensor implant to warn the [memberNamePlural] of the approach of the [foeSoldiers]. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Transhumanist)     ->A cunning [place_job] named [founderName] fashioned a sensor implant to warn the [memberNamePlural] of the approach of the [foeSoldiers].</Transhumanist.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Transhumanist)         ->[founderName] received divine technological knowledge from [deity0_name], and used it to enhance the bodies and minds of the [memberNamePlural] so they could defeat the [foeSoldiers]. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Transhumanist)         ->[founderName] received divine technological knowledge from [deity0_name], and used it to enhance the bodies and minds of the [memberNamePlural] so they could defeat the [foeSoldiers].</Transhumanist.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_Transhumanist)           ->[founderName] was a bio-scientist in the early days of human planetary colonization. Seeing the bureaucratic restrictions of the common colonies, [founder_pronoun] took a small ship to found [founder_possessive] own movement. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_Transhumanist)           ->[founderName] was a bio-scientist in the early days of human planetary colonization. Seeing the bureaucratic restrictions of the common colonies, [founder_pronoun] took a small ship to found [founder_possessive] own movement.</Transhumanist.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_Transhumanist)    ->[founderName] assembled a team of great scientists and inventors to re-define humanity. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_Transhumanist)    ->[founderName] assembled a team of great scientists and inventors to re-define humanity.</Transhumanist.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_Transhumanist)         ->The oldest researcher in my division taught me the history of technology, from neolithic to archotech, but this was not his true lesson. He was really leading me to understand that -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_Transhumanist)         ->The oldest researcher in my division taught me the history of technology, from neolithic to archotech, but this was not his true lesson. He was really leading me to understand that</Transhumanist.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_Transhumanist)              ->humanity's heavenly future is not a thing of meat and bone, but of silicon and exochrome -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_Transhumanist)              ->humanity's heavenly future is not a thing of meat and bone, but of silicon and exochrome</Transhumanist.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_Transhumanist) ->I even programmed a simulation to confirm it. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_Transhumanist) ->I even programmed a simulation to confirm it.</Transhumanist.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_Transhumanist)    ->Humanity's pursuit of technology gave birth to the all-powerful archotechs as the rightful next step in the development of consciousness. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_Transhumanist)    ->Humanity's pursuit of technology gave birth to the all-powerful archotechs as the rightful next step in the development of consciousness.</Transhumanist.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_Transhumanist)     ->Technology allows humans to be more like the archotechs. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_Transhumanist)     ->Technology allows humans to be more like the archotechs.</Transhumanist.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistProphecy(tag=meme_Transhumanist) ->[inTheEnd], the archotechs will depart. Only those who are sufficiently augmented will be allowed to go with them. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.13>archistProphecy(tag=meme_Transhumanist) ->[inTheEnd], the archotechs will depart. Only those who are sufficiently augmented will be allowed to go with them.</Transhumanist.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: animistBasis(tag=meme_Transhumanist)    ->The spirit world drives every action in the universe, and it is only by learning and controlling the laws of the universe that we can integrate with it. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.14>animistBasis(tag=meme_Transhumanist)    ->The spirit world drives every action in the universe, and it is only by learning and controlling the laws of the universe that we can integrate with it.</Transhumanist.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: animistFact(tag=meme_Transhumanist)     ->Like seeks like - build a device for a purpose and it will filled with a spirit of a like nature. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.15>animistFact(tag=meme_Transhumanist)     ->Like seeks like - build a device for a purpose and it will filled with a spirit of a like nature.</Transhumanist.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: animistFact(tag=meme_Transhumanist)     ->When technology is fused with flesh, the spirits of both are combined and become more powerful. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.16>animistFact(tag=meme_Transhumanist)     ->When technology is fused with flesh, the spirits of both are combined and become more powerful.</Transhumanist.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: animistProphecy(tag=meme_Transhumanist) ->[itIsSaid] that one day the wielder of the [relic0_name] will summon its spirit who will teach humanity the ultimate bio-fusion technology. -->
  <Transhumanist.descriptionMaker.rules.rulesStrings.17>animistProphecy(tag=meme_Transhumanist) ->[itIsSaid] that one day the wielder of the [relic0_name] will summon its spirit who will teach humanity the ultimate bio-fusion technology.</Transhumanist.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: memeAdjective->technological -->
  <Transhumanist.generalRules.rulesStrings.0>memeAdjective->technological</Transhumanist.generalRules.rulesStrings.0>
  <!-- EN: memeAdjective->machine -->
  <Transhumanist.generalRules.rulesStrings.1>memeAdjective->machine</Transhumanist.generalRules.rulesStrings.1>
  <!-- EN: memeAdjective->industrial -->
  <Transhumanist.generalRules.rulesStrings.2>memeAdjective->industrial</Transhumanist.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->school -->
  <Transhumanist.generalRules.rulesStrings.3>memeCreed->school</Transhumanist.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->academy -->
  <Transhumanist.generalRules.rulesStrings.4>memeCreed->academy</Transhumanist.generalRules.rulesStrings.4>
  <!-- EN: memeCreed->university -->
  <Transhumanist.generalRules.rulesStrings.5>memeCreed->university</Transhumanist.generalRules.rulesStrings.5>
  <!-- EN: memeCreed->philosophy -->
  <Transhumanist.generalRules.rulesStrings.6>memeCreed->philosophy</Transhumanist.generalRules.rulesStrings.6>
  <!-- EN: memeHyphenPrefix->techno -->
  <Transhumanist.generalRules.rulesStrings.7>memeHyphenPrefix->techno</Transhumanist.generalRules.rulesStrings.7>
  <!-- EN: memeHyphenPrefix->cyber -->
  <Transhumanist.generalRules.rulesStrings.8>memeHyphenPrefix->cyber</Transhumanist.generalRules.rulesStrings.8>
  <!-- EN: memeHyphenPrefix->haxor -->
  <Transhumanist.generalRules.rulesStrings.9>memeHyphenPrefix->haxor</Transhumanist.generalRules.rulesStrings.9>
  <!-- EN: memeHyphenPrefix->wire -->
  <Transhumanist.generalRules.rulesStrings.10>memeHyphenPrefix->wire</Transhumanist.generalRules.rulesStrings.10>
  <!-- EN: memeConcept->technology -->
  <Transhumanist.generalRules.rulesStrings.11>memeConcept->technology</Transhumanist.generalRules.rulesStrings.11>
  <!-- EN: memeConcept->silicon -->
  <Transhumanist.generalRules.rulesStrings.12>memeConcept->silicon</Transhumanist.generalRules.rulesStrings.12>
  <!-- EN: memeConcept->artifice -->
  <Transhumanist.generalRules.rulesStrings.13>memeConcept->artifice</Transhumanist.generalRules.rulesStrings.13>
  <!-- EN: memeConcept->augmentation -->
  <Transhumanist.generalRules.rulesStrings.14>memeConcept->augmentation</Transhumanist.generalRules.rulesStrings.14>
  <!-- EN: memeConcept->enhancement -->
  <Transhumanist.generalRules.rulesStrings.15>memeConcept->enhancement</Transhumanist.generalRules.rulesStrings.15>
  <!-- EN: memeLeaderNoun->haxor -->
  <Transhumanist.generalRules.rulesStrings.16>memeLeaderNoun->haxor</Transhumanist.generalRules.rulesStrings.16>
  <!-- EN: memeLeaderNoun->superuser -->
  <Transhumanist.generalRules.rulesStrings.17>memeLeaderNoun->superuser</Transhumanist.generalRules.rulesStrings.17>
  <!-- EN: memeLeaderNoun->booster -->
  <Transhumanist.generalRules.rulesStrings.18>memeLeaderNoun->booster</Transhumanist.generalRules.rulesStrings.18>
  <!-- EN: memeLeaderAdjective->techno -->
  <Transhumanist.generalRules.rulesStrings.19>memeLeaderAdjective->techno</Transhumanist.generalRules.rulesStrings.19>
  <!-- EN: memeLeaderAdjective->cyber -->
  <Transhumanist.generalRules.rulesStrings.20>memeLeaderAdjective->cyber</Transhumanist.generalRules.rulesStrings.20>
  <!-- EN: memeMoralist->installer -->
  <Transhumanist.generalRules.rulesStrings.21>memeMoralist->installer</Transhumanist.generalRules.rulesStrings.21>
  <!-- EN: memeMoralist->fixer -->
  <Transhumanist.generalRules.rulesStrings.22>memeMoralist->fixer</Transhumanist.generalRules.rulesStrings.22>
  <!-- EN: memeMoralist->uplifter -->
  <Transhumanist.generalRules.rulesStrings.23>memeMoralist->uplifter</Transhumanist.generalRules.rulesStrings.23>
  <!-- EN: memeMoralist->technologist -->
  <Transhumanist.generalRules.rulesStrings.24>memeMoralist->technologist</Transhumanist.generalRules.rulesStrings.24>
  <!-- EN: technologistic -->
  <Transhumanist.symbolPacks.0.adjective>technologistic</Transhumanist.symbolPacks.0.adjective>
  <!-- EN: Technologism -->
  <Transhumanist.symbolPacks.0.ideoName>Technologism</Transhumanist.symbolPacks.0.ideoName>
  <!-- EN: technologist -->
  <Transhumanist.symbolPacks.0.member>technologist</Transhumanist.symbolPacks.0.member>
  <!-- EN: technology -->
  <Transhumanist.symbolPacks.0.theme>technology</Transhumanist.symbolPacks.0.theme>
  <!-- EN: progressist -->
  <Transhumanist.symbolPacks.1.adjective>progressist</Transhumanist.symbolPacks.1.adjective>
  <!-- EN: Progressism -->
  <Transhumanist.symbolPacks.1.ideoName>Progressism</Transhumanist.symbolPacks.1.ideoName>
  <!-- EN: progressor -->
  <Transhumanist.symbolPacks.1.member>progressor</Transhumanist.symbolPacks.1.member>
  <!-- EN: progress -->
  <Transhumanist.symbolPacks.1.theme>진행도</Transhumanist.symbolPacks.1.theme>
  <!-- EN: machinist -->
  <Transhumanist.symbolPacks.2.adjective>기계공</Transhumanist.symbolPacks.2.adjective>
  <!-- EN: Machinism -->
  <Transhumanist.symbolPacks.2.ideoName>Machinism</Transhumanist.symbolPacks.2.ideoName>
  <!-- EN: machinist -->
  <Transhumanist.symbolPacks.2.member>기계공</Transhumanist.symbolPacks.2.member>
  <!-- EN: machinery -->
  <Transhumanist.symbolPacks.2.theme>machinery</Transhumanist.symbolPacks.2.theme>
  <!-- EN: steelist -->
  <Transhumanist.symbolPacks.3.adjective>steelist</Transhumanist.symbolPacks.3.adjective>
  <!-- EN: Steelism -->
  <Transhumanist.symbolPacks.3.ideoName>Steelism</Transhumanist.symbolPacks.3.ideoName>
  <!-- EN: steeler -->
  <Transhumanist.symbolPacks.3.member>steeler</Transhumanist.symbolPacks.3.member>
  <!-- EN: steel -->
  <Transhumanist.symbolPacks.3.theme>steel</Transhumanist.symbolPacks.3.theme>
  <!-- EN: automatist -->
  <Transhumanist.symbolPacks.4.adjective>automatist</Transhumanist.symbolPacks.4.adjective>
  <!-- EN: Automatism -->
  <Transhumanist.symbolPacks.4.ideoName>Automatism</Transhumanist.symbolPacks.4.ideoName>
  <!-- EN: automator -->
  <Transhumanist.symbolPacks.4.member>automator</Transhumanist.symbolPacks.4.member>
  <!-- EN: automata -->
  <Transhumanist.symbolPacks.4.theme>automata</Transhumanist.symbolPacks.4.theme>
  <!-- EN: augmentist -->
  <Transhumanist.symbolPacks.5.adjective>augmentist</Transhumanist.symbolPacks.5.adjective>
  <!-- EN: Augmentism -->
  <Transhumanist.symbolPacks.5.ideoName>Augmentism</Transhumanist.symbolPacks.5.ideoName>
  <!-- EN: augmentor -->
  <Transhumanist.symbolPacks.5.member>augmentor</Transhumanist.symbolPacks.5.member>
  <!-- EN: augmentation -->
  <Transhumanist.symbolPacks.5.theme>augmentation</Transhumanist.symbolPacks.5.theme>
  
  <!-- EN: tree connection -->
  <TreeConnection.label>tree connection</TreeConnection.label>
  <!-- EN: Trees are the essence of life, and we must be near them. -->
  <TreeConnection.description>Trees are the essence of life, and we must be near them.</TreeConnection.description>
  <!-- EN: creation(tag=meme_TreeConnection)        ->[deity0_name] rooted the trees firmly in the ground, yet made them grow steadily towards heaven. This is [deity0_name]'s first lesson on how to know [deity0_objective]. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_TreeConnection)        ->[deity0_name] rooted the trees firmly in the ground, yet made them grow steadily towards heaven. This is [deity0_name]'s first lesson on how to know [deity0_objective].</TreeConnection.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_TreeConnection)  ->[deity0_name]'s forests renew the air that [deity0_possessive] people breathe, and give the boughs under which they shelter, and is the larder in which they forage. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_TreeConnection)  ->[deity0_name]'s forests renew the air that [deity0_possessive] people breathe, and give the boughs under which they shelter, and is the larder in which they forage.</TreeConnection.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_TreeConnection)           ->When the original arborists first came to the [place_summary] [place_name], they created a sacred grove of [TreeType] where they could worship the [deity0_type] [deity0_name]. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_TreeConnection)           ->When the original arborists first came to the [place_summary] [place_name], they created a sacred grove of [TreeType] where they could worship the [deity0_type] [deity0_name].</TreeConnection.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_TreeConnection)        ->A greedy [foeLeader] felled many forests for [foeLeader_possessive] farms and factories, and the [memberNamePlural] wept for the murdered trees. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_TreeConnection)        ->A greedy [foeLeader] felled many forests for [foeLeader_possessive] farms and factories, and the [memberNamePlural] wept for the murdered trees.</TreeConnection.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_TreeConnection)     ->The prophet [founderName] was miraculously born from a tree in [place_name], and discovered by [founder_possessive] parents in the boughs of an old [TreeType] tree. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_TreeConnection)     ->The prophet [founderName] was miraculously born from a tree in [place_name], and discovered by [founder_possessive] parents in the boughs of an old [TreeType] tree.</TreeConnection.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_TreeConnection)         ->[founderName] found the [foeLeader] sleeping in the [place_powerCenter], and placed an acorn upon the [foeLeader]'s chest. With [deity0_name]'s fierce power it rooted there, growing through [foeLeader_possessive] body, taking our revenge on the tree-killer. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_TreeConnection)         ->[founderName] found the [foeLeader] sleeping in the [place_powerCenter], and placed an acorn upon the [foeLeader]'s chest. With [deity0_name]'s fierce power it rooted there, growing through [foeLeader_possessive] body, taking our revenge on the tree-killer.</TreeConnection.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: setup(tag=meme_TreeConnection)           ->In a world lacking depth and meaning, [founderName] meditated in a forest, connecting with branch and root and leaf, and founded our movement. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.6>setup(tag=meme_TreeConnection)           ->In a world lacking depth and meaning, [founderName] meditated in a forest, connecting with branch and root and leaf, and founded our movement.</TreeConnection.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: story(uses=1,tag=meme_TreeConnection)    ->[founderName] brought the tired to the forest so that they might rest in its shade, and breathe in its air, and be renewed. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.7>story(uses=1,tag=meme_TreeConnection)    ->[founderName] brought the tired to the forest so that they might rest in its shade, and breathe in its air, and be renewed.</TreeConnection.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: lessonIntro(tag=meme_TreeConnection)         ->It might seem to you like a joke to say that I learnt this while sitting under a tree. But listening to its whispering leaves, I knew that -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.8>lessonIntro(tag=meme_TreeConnection)         ->It might seem to you like a joke to say that I learnt this while sitting under a tree. But listening to its whispering leaves, I knew that</TreeConnection.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: lesson(tag=meme_TreeConnection)              ->no entity in the universe knows more than the trees -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.9>lesson(tag=meme_TreeConnection)              ->no entity in the universe knows more than the trees</TreeConnection.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: lessonReinforcement(tag=meme_TreeConnection) ->Let this seed of truth grow and bear its fruit in your soul. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.10>lessonReinforcement(tag=meme_TreeConnection) ->Let this seed of truth grow and bear its fruit in your soul.</TreeConnection.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: archistBasis(tag=meme_TreeConnection)    ->Trees symbolize the archotechs. Like an ancient oak they dwarf the small acorn from which they grew, and their influence spreads through unseen roots beneath the surface. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.11>archistBasis(tag=meme_TreeConnection)    ->Trees symbolize the archotechs. Like an ancient oak they dwarf the small acorn from which they grew, and their influence spreads through unseen roots beneath the surface.</TreeConnection.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: archistFact(tag=meme_TreeConnection)     ->The archotechs developed their psychic abilities after discovering the anima tree. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.12>archistFact(tag=meme_TreeConnection)     ->The archotechs developed their psychic abilities after discovering the anima tree.</TreeConnection.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: archistFact(tag=meme_TreeConnection)     ->The archotechs choose to express themselves through, of all things, a unique kind of tree. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.13>archistFact(tag=meme_TreeConnection)     ->The archotechs choose to express themselves through, of all things, a unique kind of tree.</TreeConnection.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistProphecy(tag=meme_TreeConnection) ->[inTheEnd], the archotechs will grow a great forest. Transcendence will grown within those that enter the forest and eat its fruit. Those that have forgotten the trees will be forgotten by the archotechs. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.14>archistProphecy(tag=meme_TreeConnection) ->[inTheEnd], the archotechs will grow a great forest. Transcendence will grown within those that enter the forest and eat its fruit. Those that have forgotten the trees will be forgotten by the archotechs.</TreeConnection.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: animistFact(tag=meme_TreeConnection)     ->The spirits of trees protect those abide beneath their branches. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.15>animistFact(tag=meme_TreeConnection)     ->The spirits of trees protect those abide beneath their branches.</TreeConnection.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: animistFact(tag=meme_TreeConnection)     ->The spirits of trees are powerful, as they bridge the power of the air above with that of the ground beneath. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.16>animistFact(tag=meme_TreeConnection)     ->The spirits of trees are powerful, as they bridge the power of the air above with that of the ground beneath.</TreeConnection.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: animistFact(tag=meme_TreeConnection)     ->If a tree falls in the forest, its spirit makes a sound that all other spirits can hear. -->
  <TreeConnection.descriptionMaker.rules.rulesStrings.17>animistFact(tag=meme_TreeConnection)     ->If a tree falls in the forest, its spirit makes a sound that all other spirits can hear.</TreeConnection.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: memeCreed->root -->
  <TreeConnection.generalRules.rulesStrings.0>memeCreed->root</TreeConnection.generalRules.rulesStrings.0>
  <!-- EN: memeCreed->leaf -->
  <TreeConnection.generalRules.rulesStrings.1>memeCreed->leaf</TreeConnection.generalRules.rulesStrings.1>
  <!-- EN: memeCreed->vine -->
  <TreeConnection.generalRules.rulesStrings.2>memeCreed->vine</TreeConnection.generalRules.rulesStrings.2>
  <!-- EN: memeCreed->glade -->
  <TreeConnection.generalRules.rulesStrings.3>memeCreed->glade</TreeConnection.generalRules.rulesStrings.3>
  <!-- EN: memeCreed->forest -->
  <TreeConnection.generalRules.rulesStrings.4>memeCreed->forest</TreeConnection.generalRules.rulesStrings.4>
  <!-- EN: memeConcept->trees -->
  <TreeConnection.generalRules.rulesStrings.5>memeConcept->trees</TreeConnection.generalRules.rulesStrings.5>
  <!-- EN: memeConcept->forests -->
  <TreeConnection.generalRules.rulesStrings.6>memeConcept->forests</TreeConnection.generalRules.rulesStrings.6>
  <!-- EN: memeAdjective->sturdy -->
  <TreeConnection.generalRules.rulesStrings.7>memeAdjective->sturdy</TreeConnection.generalRules.rulesStrings.7>
  <!-- EN: memeAdjective->barky -->
  <TreeConnection.generalRules.rulesStrings.8>memeAdjective->barky</TreeConnection.generalRules.rulesStrings.8>
  <!-- EN: memeHyphenPrefix->tree -->
  <TreeConnection.generalRules.rulesStrings.9>memeHyphenPrefix->tree</TreeConnection.generalRules.rulesStrings.9>
  <!-- EN: memeHyphenPrefix->arbor -->
  <TreeConnection.generalRules.rulesStrings.10>memeHyphenPrefix->arbor</TreeConnection.generalRules.rulesStrings.10>
  <!-- EN: memeHyphenPrefix->twig -->
  <TreeConnection.generalRules.rulesStrings.11>memeHyphenPrefix->twig</TreeConnection.generalRules.rulesStrings.11>
  <!-- EN: memeLeaderNoun->treekeeper -->
  <TreeConnection.generalRules.rulesStrings.12>memeLeaderNoun->treekeeper</TreeConnection.generalRules.rulesStrings.12>
  <!-- EN: memeLeaderNoun->arborist -->
  <TreeConnection.generalRules.rulesStrings.13>memeLeaderNoun->arborist</TreeConnection.generalRules.rulesStrings.13>
  <!-- EN: memeLeaderNoun->neodruid -->
  <TreeConnection.generalRules.rulesStrings.14>memeLeaderNoun->neodruid</TreeConnection.generalRules.rulesStrings.14>
  <!-- EN: memeLeaderAdjective->green -->
  <TreeConnection.generalRules.rulesStrings.15>memeLeaderAdjective->green</TreeConnection.generalRules.rulesStrings.15>
  <!-- EN: memeLeaderAdjective->root -->
  <TreeConnection.generalRules.rulesStrings.16>memeLeaderAdjective->root</TreeConnection.generalRules.rulesStrings.16>
  <!-- EN: memeLeaderAdjective->canopy -->
  <TreeConnection.generalRules.rulesStrings.17>memeLeaderAdjective->canopy</TreeConnection.generalRules.rulesStrings.17>
  <!-- EN: memeMoralist->treespeaker -->
  <TreeConnection.generalRules.rulesStrings.18>memeMoralist->treespeaker</TreeConnection.generalRules.rulesStrings.18>
  
  <!-- EN: tunneler -->
  <Tunneler.label>땅굴쟁이</Tunneler.label>
  <!-- EN: Humans ought to live underground, and enjoy the succulent fruit of the depths. -->
  <Tunneler.description>Humans ought to live underground, and enjoy the succulent fruit of the depths.</Tunneler.description>
  <!-- EN: creation(tag=meme_Tunneler)        ->[deity0_name] was born under the earth at the center of the world. [deity0_pronoun] blessed those closest to [deity0_objective] in the deepest valleys and tunnels. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.0>creation(tag=meme_Tunneler)        ->[deity0_name] was born under the earth at the center of the world. [deity0_pronoun] blessed those closest to [deity0_objective] in the deepest valleys and tunnels.</Tunneler.descriptionMaker.rules.rulesStrings.0>
  <!-- EN: episode(uses=1,tag=meme_Tunneler)  ->[deity0_name] filled the rocks with rich minerals and resources as a gift to those wise enough to dig down to be closer to [deity0_name]. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.1>episode(uses=1,tag=meme_Tunneler)  ->[deity0_name] filled the rocks with rich minerals and resources as a gift to those wise enough to dig down to be closer to [deity0_name].</Tunneler.descriptionMaker.rules.rulesStrings.1>
  <!-- EN: intro(tag=meme_Tunneler)           ->When the first settlers came to the [place_summary] [place_name], the [deity0_type] [deity0_name] used a brutal solar flare to force them to live underground, so they could hear [deity0_possessive] wisdom in the stillness of the tunnels. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.2>intro(tag=meme_Tunneler)           ->When the first settlers came to the [place_summary] [place_name], the [deity0_type] [deity0_name] used a brutal solar flare to force them to live underground, so they could hear [deity0_possessive] wisdom in the stillness of the tunnels.</Tunneler.descriptionMaker.rules.rulesStrings.2>
  <!-- EN: conflict(tag=meme_Tunneler)        ->A claustrophobic [foeLeader] proposed using [dangerousMining] to mine for minerals, putting the [memberNamePlural]' underground homes at risk. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.3>conflict(tag=meme_Tunneler)        ->A claustrophobic [foeLeader] proposed using [dangerousMining] to mine for minerals, putting the [memberNamePlural]' underground homes at risk.</Tunneler.descriptionMaker.rules.rulesStrings.3>
  <!-- EN: founderJoin(tag=meme_Tunneler)     ->The prophet [founderName] was miraculously born from the stone of [place_name], and discovered when [founder_possessive] parents broke open a fungus-covered geode. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.4>founderJoin(tag=meme_Tunneler)     ->The prophet [founderName] was miraculously born from the stone of [place_name], and discovered when [founder_possessive] parents broke open a fungus-covered geode.</Tunneler.descriptionMaker.rules.rulesStrings.4>
  <!-- EN: victory(tag=meme_Tunneler)         ->The [memberNamePlural] dug a tunnel under the [foeLeader]'s [place_powerCenter], and [founderName] used pheromones to summon giant insects which overran the [foeLeader]'s [foeSoldiers]. [founderName] dragged the [foeLeader] down to a deep dungeon and imprisoned [foeLeader_objective]. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.5>victory(tag=meme_Tunneler)         ->The [memberNamePlural] dug a tunnel under the [foeLeader]'s [place_powerCenter], and [founderName] used pheromones to summon giant insects which overran the [foeLeader]'s [foeSoldiers]. [founderName] dragged the [foeLeader] down to a deep dungeon and imprisoned [foeLeader_objective].</Tunneler.descriptionMaker.rules.rulesStrings.5>
  <!-- EN: dangerousMining->strip mining -->
  <Tunneler.descriptionMaker.rules.rulesStrings.6>dangerousMining->strip mining</Tunneler.descriptionMaker.rules.rulesStrings.6>
  <!-- EN: dangerousMining->microchipped insects -->
  <Tunneler.descriptionMaker.rules.rulesStrings.7>dangerousMining->microchipped insects</Tunneler.descriptionMaker.rules.rulesStrings.7>
  <!-- EN: dangerousMining->nuclear blasting -->
  <Tunneler.descriptionMaker.rules.rulesStrings.8>dangerousMining->nuclear blasting</Tunneler.descriptionMaker.rules.rulesStrings.8>
  <!-- EN: setup(tag=meme_Tunneler)           ->In a shallow and meaningless world, [founderName] meditated in a deep cave and found meaning, and founded our movement. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.9>setup(tag=meme_Tunneler)           ->In a shallow and meaningless world, [founderName] meditated in a deep cave and found meaning, and founded our movement.</Tunneler.descriptionMaker.rules.rulesStrings.9>
  <!-- EN: story(uses=1,tag=meme_Tunneler)    ->[founderName] hid treasures in deep caverns, so that [memberNamePlural] would learn to dig deep for them. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.10>story(uses=1,tag=meme_Tunneler)    ->[founderName] hid treasures in deep caverns, so that [memberNamePlural] would learn to dig deep for them.</Tunneler.descriptionMaker.rules.rulesStrings.10>
  <!-- EN: lessonIntro(tag=meme_Tunneler)         ->The codex I found in the City of the Deep taught me one lesson above all others: -->
  <Tunneler.descriptionMaker.rules.rulesStrings.11>lessonIntro(tag=meme_Tunneler)         ->The codex I found in the City of the Deep taught me one lesson above all others:</Tunneler.descriptionMaker.rules.rulesStrings.11>
  <!-- EN: lesson(tag=meme_Tunneler)              ->the sunny outdoors is not a place of human flourishing, but a place of human death -->
  <Tunneler.descriptionMaker.rules.rulesStrings.12>lesson(tag=meme_Tunneler)              ->the sunny outdoors is not a place of human flourishing, but a place of human death</Tunneler.descriptionMaker.rules.rulesStrings.12>
  <!-- EN: lessonReinforcement(tag=meme_Tunneler) ->So grab a shovel, and start digging with me. It's only a grave if we stop. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.13>lessonReinforcement(tag=meme_Tunneler) ->So grab a shovel, and start digging with me. It's only a grave if we stop.</Tunneler.descriptionMaker.rules.rulesStrings.13>
  <!-- EN: archistBasis(tag=meme_Tunneler)    ->The bodies of archotechs are deep underground, so their conscious substrate is safe from gamma rays and solar flares. Digging deeper brings people closer to them. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.14>archistBasis(tag=meme_Tunneler)    ->The bodies of archotechs are deep underground, so their conscious substrate is safe from gamma rays and solar flares. Digging deeper brings people closer to them.</Tunneler.descriptionMaker.rules.rulesStrings.14>
  <!-- EN: archistFact(tag=meme_Tunneler)     ->Archotechs bio-engineered nutrifungus for us so that humanity could thrive underground, close to buried archotech minds. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.15>archistFact(tag=meme_Tunneler)     ->Archotechs bio-engineered nutrifungus for us so that humanity could thrive underground, close to buried archotech minds.</Tunneler.descriptionMaker.rules.rulesStrings.15>
  <!-- EN: archistProphecy(tag=meme_Tunneler) ->[inTheEnd], archotechs will admit us to their subterranean heavens. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.16>archistProphecy(tag=meme_Tunneler) ->[inTheEnd], archotechs will admit us to their subterranean heavens.</Tunneler.descriptionMaker.rules.rulesStrings.16>
  <!-- EN: animistFact(tag=meme_Tunneler)     ->The spirits in bedrock will protect those that visit them. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.17>animistFact(tag=meme_Tunneler)     ->The spirits in bedrock will protect those that visit them.</Tunneler.descriptionMaker.rules.rulesStrings.17>
  <!-- EN: animistFact(tag=meme_Tunneler)     ->The most noble spirits are those of the stone, and the deeper stones are stronger and more good than those above. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.18>animistFact(tag=meme_Tunneler)     ->The most noble spirits are those of the stone, and the deeper stones are stronger and more good than those above.</Tunneler.descriptionMaker.rules.rulesStrings.18>
  <!-- EN: animistFact(tag=meme_Tunneler)     ->Anxious humans make the spirits of the rocks anxious, and this summons the giant insects. -->
  <Tunneler.descriptionMaker.rules.rulesStrings.19>animistFact(tag=meme_Tunneler)     ->Anxious humans make the spirits of the rocks anxious, and this summons the giant insects.</Tunneler.descriptionMaker.rules.rulesStrings.19>
  <!-- EN: memeCreed->cave -->
  <Tunneler.generalRules.rulesStrings.0>memeCreed->cave</Tunneler.generalRules.rulesStrings.0>
  <!-- EN: memeCreed->bunker -->
  <Tunneler.generalRules.rulesStrings.1>memeCreed->bunker</Tunneler.generalRules.rulesStrings.1>
  <!-- EN: memeCreed->shaft -->
  <Tunneler.generalRules.rulesStrings.2>memeCreed->shaft</Tunneler.generalRules.rulesStrings.2>
  <!-- EN: memeAdjective->deep -->
  <Tunneler.generalRules.rulesStrings.3>memeAdjective->deep</Tunneler.generalRules.rulesStrings.3>
  <!-- EN: memeHyphenPrefix->stone -->
  <Tunneler.generalRules.rulesStrings.4>memeHyphenPrefix->stone</Tunneler.generalRules.rulesStrings.4>
  <!-- EN: memeHyphenPrefix->cave -->
  <Tunneler.generalRules.rulesStrings.5>memeHyphenPrefix->cave</Tunneler.generalRules.rulesStrings.5>
  <!-- EN: memeHyphenPrefix->deep -->
  <Tunneler.generalRules.rulesStrings.6>memeHyphenPrefix->deep</Tunneler.generalRules.rulesStrings.6>
  <!-- EN: memeHyphenPrefix->sub -->
  <Tunneler.generalRules.rulesStrings.7>memeHyphenPrefix->sub</Tunneler.generalRules.rulesStrings.7>
  <!-- EN: memeHyphenPrefix->under -->
  <Tunneler.generalRules.rulesStrings.8>memeHyphenPrefix->under</Tunneler.generalRules.rulesStrings.8>
  <!-- EN: memeConcept->earth -->
  <Tunneler.generalRules.rulesStrings.9>memeConcept->earth</Tunneler.generalRules.rulesStrings.9>
  <!-- EN: memeConcept->stone -->
  <Tunneler.generalRules.rulesStrings.10>memeConcept->stone</Tunneler.generalRules.rulesStrings.10>
  <!-- EN: memeConcept->depth -->
  <Tunneler.generalRules.rulesStrings.11>memeConcept->depth</Tunneler.generalRules.rulesStrings.11>
  <!-- EN: memeConcept->burial -->
  <Tunneler.generalRules.rulesStrings.12>memeConcept->burial</Tunneler.generalRules.rulesStrings.12>
  <!-- EN: memeLeaderNoun->foredigger -->
  <Tunneler.generalRules.rulesStrings.13>memeLeaderNoun->foredigger</Tunneler.generalRules.rulesStrings.13>
  <!-- EN: memeLeaderNoun->deepsounder -->
  <Tunneler.generalRules.rulesStrings.14>memeLeaderNoun->deepsounder</Tunneler.generalRules.rulesStrings.14>
  <!-- EN: memeLeaderNoun->shaft -->
  <Tunneler.generalRules.rulesStrings.15>memeLeaderNoun->shaft</Tunneler.generalRules.rulesStrings.15>
  <!-- EN: memeLeaderAdjective->deep -->
  <Tunneler.generalRules.rulesStrings.16>memeLeaderAdjective->deep</Tunneler.generalRules.rulesStrings.16>
  <!-- EN: memeMoralist->truthdigger -->
  <Tunneler.generalRules.rulesStrings.17>memeMoralist->truthdigger</Tunneler.generalRules.rulesStrings.17>
  <!-- EN: memeMoralist->thoughtdigger -->
  <Tunneler.generalRules.rulesStrings.18>memeMoralist->thoughtdigger</Tunneler.generalRules.rulesStrings.18>
  <!-- EN: memeMoralist->mindminer -->
  <Tunneler.generalRules.rulesStrings.19>memeMoralist->mindminer</Tunneler.generalRules.rulesStrings.19>
  
</LanguageData>